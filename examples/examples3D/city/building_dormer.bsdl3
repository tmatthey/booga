/*
 * $RCSfile: building_dormer.bsdl3,v $
 *
 * A simple example of a building with a roof, bottom and snatch-objects
 *
 * Copyright (C) 1996, Thierry Matthey <matthey@iam.unibe.ch>
 *                     University of Berne, Switzerland
 *
 * All rights reserved.
 *
 * This software may be freely copied, modified, and redistributed
 * provided that this copyright notice is preserved on all copies.
 *
 * You may not distribute this software, in whole or in part, as part of
 * any commercial product without the express consent of the authors.
 *
 * There is no warranty or other guarantee of fitness of this software
 * for any purpose.  It is provided solely "as is".
 *
 * -----------------------------------------------------------------------------
 *  $Id: building_dormer.bsdl3,v 1.3 1997/04/15 08:37:37 matthey Exp $
 * -----------------------------------------------------------------------------
 */
  
using 3D;

//
// Definition of the camera and the lightsource
//

#include "color.inc"

camera {
  perspective {
    resolution (600, 400);
    eye [100,110,70];
    lookat [0,0,0];
  }
  background [.3,.3,.3];
};

pointLight (1.8, [1,1,1]) { position [200,-200,300]; }

// a simple dormer defined by an other building
define dormer
  building(4,[-10,-2,0],[0,-2,0],[0,2,0],[-10,2,0]){
    sandsteinWeiss;
    frontrect(0);
    fronttri(1,0,[0.5,1.5]){
      faceitem([.1,.1],[.9,.9],1,1){
        displacement[.5,.5];
        box([-1.5,-1.4,0],[1.5,1.4,.1]){green;}
      }
    }
    frontrect(2);
    fronttri(3,0,[0.5,1.5]);
    roofpoint (1){dachRot;}
  }

building (10,[-30,-30, 0],   // height of the building
             [ 50,-30, 0],   // coords of the bottom of the building
             [ 30, 70, 0],   // the building has no userdefined faces
             [-30, 30, 0]){
             // bottom with texture
             bottomflat{height(0.01);brown;};
             // texture of the default fronts
             sandstein;
             roofplane(2,30){dachRot;}
             // rotationcenter of the snatchobject is [0,0,0] around the z-axis
             // angle is defined between (1,0,0)
             // and direction (in the XY-plane) of the normal  of the roof
             snatch([20,10]){dormer;}
             snatch([0,40]){dormer;}
             snatch([-20,0]){dormer;}
             snatch([0,-20]){dormer;}
          }

// grass
polygon([-60,-60,0],[60,-60,0],[60,80,0],[-60,80,0]){green;}
