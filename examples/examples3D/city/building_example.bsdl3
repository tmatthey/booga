/*
 * $RCSfile: building_example.bsdl3,v $
 *
 * An example with an arbour and two fronts which have a peek.
 *
 * Copyright (C) 1996, Thierry Matthey <matthey@iam.unibe.ch>
 *                     University of Berne, Switzerland
 *
 * All rights reserved.
 *
 * This software may be freely copied, modified, and redistributed
 * provided that this copyright notice is preserved on all copies.
 *
 * You may not distribute this software, in whole or in part, as part of
 * any commercial product without the express consent of the authors.
 *
 * There is no warranty or other guarantee of fitness of this software
 * for any purpose.  It is provided solely "as is".
 *
 * -----------------------------------------------------------------------------
 *  $Id: building_example.bsdl3,v 1.1 1997/05/26 13:45:11 matthey Exp $
 * -----------------------------------------------------------------------------
 */
  
using 3D;

// Definition of the camera and the lightsource

camera {
  perspective {
    eye [100,600,300];
    lookat [0,0,0];
    resolution (550, 300);
  }
  background [157/255,180/255,253/255];
};

pointLight (1.0, [1,1,1]) { position [-500,500,1000]; }
pointLight (0.2, [1,1,1]) { position [200,800,1000]; }
pointLight (0.2, [1,1,1]) { position [200,800,100]; }

// Defintion of the colors and textures

define green2         whitted { ambient [.2,.2,.2]; diffuse [.3,.6,.2]; }
define grey           whitted { ambient [.2,.2,.2]; diffuse [.7,.7,.7]; }
define sandstein      whitted { ambient [.3,.2,.25];diffuse [220/255,200/255,170/255];}
define sandsteinWeiss whitted { ambient [.4,.4,.4]; diffuse [220/255,210/255,200/255];}
define glasDunkel     whitted { ambient [.1,.1,.1]; diffuse [60/255,90/255,80/255];}
define dachRot        whitted { ambient [.1,.1,.1]; diffuse [180/255,115/255,97/255];}
//define fronttexture polygonmapper( "rock10.jpg",0.03,0.03,0);


// Defintion of the dormer

define dormer
  building(6,[-10,-2.5,0],[0,-2.5,0],[0,2.5,0],[-10,2.5,0]){
    sandstein;
    fronttri(0,0,[0,1.25]);
    frontrect(1,0,0,1){
      faceitem([.1,.1],[.9,.9],1,1){
        displacement[.5,.5];
        box([-1.5,-2,-.1],[1.5,1.4,-0.01]){glasDunkel;}
        hole([1.5,-2],[1.5,0.5],[1.37109,0.89375],[1.03125,1.175],
             [0.550781,1.34375],[0,1.4],[-0.550781,1.34375],
             [-1.03125,1.175],[-1.37109,0.89375],[-1.5,0.5],[-1.5,-2]);
        // Path of the hole:
        //  1.5 -2.0 m
        //  1.5 0.5 l
        //  1.5 1.7 -1.5 1.7 -1.5 0.5 c
        //  -1.5 -2.0 l
      }
    }
    fronttri(2,0,[1,1.25]);
    frontrect(3,0,0,1.25);
    rooflayer ([0.5,0,0],[0.5,0.1,0]){dachRot;}
  }

// Defintion of the window

define window list {
  // Border of the window
  box([-3,-6,-1],[-2.5,6,1]){sandsteinWeiss;}; // left
  box([-4,-6,-1],[-2.5,6,0]); 
  box([3,-6,-1],[2.5,6,1]){sandsteinWeiss;};   // right
  box([4,-6,-1],[2.5,6,0]);
  box([-4,-6,-1],[4,-5,2]){sandsteinWeiss;};   // bottom
  box([-3,6,-1],[3,5.5,1]){sandsteinWeiss;};   // top
  // Arc of the window
  box([0,0,-1],[3.5,-.5,1]){
    rotateZ(30);
    translate[-3,6,0];
    sandsteinWeiss;
  }
  box([0,0,-1],[-3.5,-.5,1]){
    rotateZ(-30);
    translate[3,6,0];
    sandsteinWeiss;
  }
  box([-3,5.5,-1],[3,8,0.01]){sandsteinWeiss;};
  box([-4,5.5,-1],[4,8,0]);
  // Glas of the window
  box([-3,-5,-1],[3,5.5,-.5]){glasDunkel;}
}

// Defintion of the Building

building (50, [200, 100, 0], [-200, 100, 0], [-200, -100, 0], [200, -100, 0]) {
  sandstein;
  frontrect (0, 0, 0, 1) {
    facetunnel ([0.425, 0], [0.575, 0.5],[0.4, 0], [0.6, 0.5], 2, 1) {
      bezierparm1 0.9;
      numberofpoints 9;
      walloff;
    };
    faceitem([0,0.5],[1,1],13,1){
      window;
      hole;
      displacement[0.5,0.5];
    }
  };
  frontrect (1, 0, 0, 1){
    faceitem([0,0.5],[1,1],7,1){
      window;
      hole;
      displacement[0.5,0.5];
    }
  }
  frontrect (2, 0, 0, 1) {
    facetunnel ([0.425, 0], [0.575, 0.5],[0.4, 0], [0.6, 0.5], 0, 1) {
      bezierparm1 0.9;
      numberofpoints 9;
      walloff;
    };
    faceitem([0,0.5],[1,1],13,1){
      window;
      hole;
      displacement[0.5,0.5];
    }
  };
  frontrect (3, 0, 0, 1){
    faceitem([0,0.5],[1,1],7,1){
      window;
      hole;
      displacement[0.5,0.5];
    }
  }
  frontrect (0, 1, 0, 1){
    facearbour([0,0],[0.4,0.5],3);
    facearbour([0.6,0],[1,0.5],3);
    faceitem([0,0.5],[1,1],9,1){
      window;
      hole;
      displacement[0.5,0.5];
    }
  }
  frontrect (1, 1, 0, 1){
    facearbour([0,0],[1,0.5],3);
    faceitem([0,0.5],[1,1],4,1){
      window;
      hole;
      displacement[0.5,0.5];
    }
  }
  frontrect (2, 1, 0, 1){
    facearbour([0,0],[0.4,0.5],3);
    facearbour([0.6,0],[1,0.5],3);
    faceitem([0,0.5],[1,1],9,1){
      window;
      hole;
      displacement[0.5,0.5];
    }
  }
  frontrect (3, 1, 0, 1){
    facearbour([0,0],[1,0.5],3);
    faceitem([0,0.5],[1,1],4,1){
      window;
      hole;
      displacement[0.5,0.5];
    }
  }
  roofplane(5,30){dachRot;}
  hole ([150, -50, 0],[-150, -50, 0],[-150, 50, 0],[150, 50, 0]);
  bottomflat{height(0.01); grey;}
  bottomborder(1,1,2,1){height(25);}
  // Front
  snatch([-200+400/26 + 400/13*1,92.5]){dormer;}
  snatch([-200+400/26 + 400/13*3,92.5]){dormer;}
  snatch([-200+400/26 + 400/13*5,92.5]){dormer;}
  snatch([-200+400/26 + 400/13*7,92.5]){dormer;}
  snatch([-200+400/26 + 400/13*9,92.5]){dormer;}
  // Back
  snatch([-200+400/26 + 400/13*11,92.5]){dormer;}
  snatch([-200+400/26 + 400/13*1,-92.5]){dormer;}
  snatch([-200+400/26 + 400/13*3,-92.5]){dormer;}
  snatch([-200+400/26 + 400/13*5,-92.5]){dormer;}
  snatch([-200+400/26 + 400/13*7,-92.5]){dormer;}
  snatch([-200+400/26 + 400/13*9,-92.5]){dormer;}
  snatch([-200+400/26 + 400/13*11,-92.5]){dormer;}
  // Left 
  snatch([-192.5,-100+200/14 + 200/7*1]){dormer;}
  snatch([-192.5,-100+200/14 + 200/7*3]){dormer;}
  snatch([-192.5,-100+200/14 + 200/7*5]){dormer;}
  // Right
  snatch([192.5,-100+200/14 + 200/7*1]){dormer;}
  snatch([192.5,-100+200/14 + 200/7*3]){dormer;}
  snatch([192.5,-100+200/14 + 200/7*5]){dormer;}
};

// ground
box([-1000,-1000,-1],[1000,1000,0]){green2;}
box([-150, -50, -1], [150, 50, 0.01]){grey;}

