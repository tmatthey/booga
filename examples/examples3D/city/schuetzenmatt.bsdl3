/*
 * iam.bsdl3 
 *
 * Copyright (C) 1994-96, Bernhard Buehlmann <buehlmann@iam.unibe.ch>
 *                        University of Berne, Switzerland
 *
 * All rights reserved.
 *
 * This software may be freely copied, modified, and redistributed
 * provided that this copyright notice is preserved on all copies.
 *
 * You may not distribute this software, in whole or in part, as part of
 * any commercial product without the express consent of the authors.
 *
 * There is no warranty or other guarantee of fitness of this software
 * for any purpose.  It is provided solely "as is".
 *
 * -----------------------------------------------------------------------------
 *  $Id: schuetzenmatt.bsdl3,v 1.4 1997/05/26 13:45:18 matthey Exp $
 * -----------------------------------------------------------------------------
 */

#ifndef _schuetz_bsdl3
#define _schuetz_bsdl3

#include "viewing.inc"
#include "color.inc"
#include "item.bsdl3"

const schuetz_b1 28;
const schuetz_stock_h 40;

define dormer 
  box([0,-3,-1],[-6,3,0.5]){gruenSpiegel;rotateY(-33);};

define schuetzenmatt list {
  building(iam_stock_h*2,
           [0,0,0],[200,0,0],[200,100,0],[0,100,0]){
 
    bottomflat{height(0.1);grey;}
    roofpoint(5,[100,      50,iam_stock_h*2*0.4],
                [100+50/3, 50,iam_stock_h*2*0.4],
                [100+100/3,50,iam_stock_h*2*0.4],
                [100,      110*0.17,iam_stock_h*2*0.17],
                [100+50/3, 110*0.27,iam_stock_h*2*0.27],
                [100+100/3,110*0.17,iam_stock_h*2*0.17]){dachSchuetz;};
    bottomborder(1,1,8,1){grey;}
    bottomborder(1,1,1,0.1){sandstein;height(iam_stock_h+1);}
    bottomborder(1,1,1,0.1){sandstein;height(iam_stock_h*2-10);}
    fronttri(0,0,[0.5,1],[0.501,1.17],[0.5+1/12,1.27],[1-1/3-0.001,1.17],[1-1/3,1]){
      textureWall;
      faceitem([0,0.5],[0.5,0.9],3,1){
        fenster_iam00;
        displacement[.5,0.5];
        hole;
      }
      faceitem([1-1/3,0.1],[1,0.9],2,2){
        fenster_iam00;
        displacement[.5,0.5];
        hole;
      }
      faceitem([0.5,0.5],[1-1/3,1.2],1,2){
        fenster_iam00{scale[1,0.8,1];}
        displacement[.5,0.4];
        hole;
      }
      faceitem([0.5,0.0],[1-1/3,0.5],1,1){
        list {
          tuere_iam00{scale[1,0.8,1];}
          box([-10,-4,0],[10,0,5]){grey;}
        }
        displacement[.5,0.1];
      }
      faceitem([0.5,0.],[1-1/3,1.2],1,1){
        cylinder(1.5,[0,0,0],[0,iam_stock_h*2,0]){grey;}
        bothcolumn;
      }
    }
    fronttri(1,0,[0.5,1.4]){ 
      textureWall;
      faceitem([0,0.5],[1,.9],3,1){
        fenster_iam00;
        displacement[.5,0.5];
        hole;
      }
      faceitem([0.4,0.9],[0.6,1.2],1,1){
        fenster_iam00{scale[1,0.8,1];}
        displacement[.5,0.5];
        hole;
      }
    }
    frontrect(2){
      textureWall;
      faceitem([0,0.5],[1,.9],7,1){
        fenster_iam00;
        displacement[.5,0.5];
        textureWall;
        hole;
      }
    }
    fronttri(3,0,[0.5,1.4])
    {
      textureWall;
      faceitem([0,0.5],[1,.9],3,1){
        fenster_iam00;
        displacement[.5,0.5];
        textureWall;
        hole;
      }
      faceitem([0.4,0.9],[0.6,1.2],1,1){
        fenster_iam00{scale[1,0.8,1];}
        displacement[.5,0.5];
        hole;
      }
    }
    snatch([25,15]){dormer;}
    snatch([50,15]){dormer;}
    snatch([50,35]){cylinder(2,[0,0,-2],[0,0,5]){grey;};}
    snatch([75,15]){dormer;}
    snatch([155,15]){dormer;}
    snatch([165,35]){cylinder(2,[0,0,-2],[0,0,5]){grey;};}
    snatch([180,15]){dormer;}
    
  }
}

#ifndef _no_instance
   schuetzenmatt;
#endif
// _no_instance

#endif
// _ iam_bsdl3


