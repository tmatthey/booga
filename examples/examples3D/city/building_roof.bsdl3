/*
 * $RCSfile: building_simple.bsdl3,v $
 *
 * A simple example of a building with a roof, bottom but without faces
 * and fronts. It contains an animated object.
 *
 * Copyright (C) 1996, Thierry Matthey <matthey@iam.unibe.ch>
 *                     University of Berne, Switzerland
 *
 * All rights reserved.
 *
 * This software may be freely copied, modified, and redistributed
 * provided that this copyright notice is preserved on all copies.
 *
 * You may not distribute this software, in whole or in part, as part of
 * any commercial product without the express consent of the authors.
 *
 * There is no warranty or other guarantee of fitness of this software
 * for any purpose.  It is provided solely "as is".
 *
 * -----------------------------------------------------------------------------
 *  $Id: building_simple.bsdl3,v 1.2 1997/01/17 12:02:17 matthey Exp $
 * -----------------------------------------------------------------------------
 */
  
using 3D;

//
// Definition of the camera and the lightsource
//

camera {
  perspective {
    resolution (600, 400);
    eye [60,60,35];
    lookat [0,0,7];
  }
//  background [.5,.5,.6];
  background [1,1,1];
};

pointLight (1, [1,1,1]) { radius 10; position [-350,300,400]; }
pointLight (.9, [1,1,1]) { radius 10; position [330,330,130]; }
ambientLight (.2, [1,1,1]);

define black       whitted {ambient [.1,.1,.1];diffuse [0,0,0]; }
//define green       whitted {ambient [1,1,1];diffuse [1,1,1];}
define green       whitted {ambient [82/255,134/255,113/255];diffuse [82/255,134/255,113/255];}
define dachRot     whitted {ambient [180/255,115/255,97/255];diffuse [180/255,115/255,97/255];}
define sandstein   whitted {ambient [220/255,200/255,170/255];diffuse [220/255,200/255,170/255];}

define rock    polygonmapper("texture/rock10.jpg",0.3,0.3,0)   {ambient [.5,.5,.5];}
define parkett polygonmapper("texture/parkett.jpg",0.03,0.03,0){ambient [120/255,80/255,38/255];}
define clouds  polygonmapper("texture/clouds.jpg",0.03,0.03,0) {ambient [180/255,200/255,220/255]; 
                                                                shiny;
                                                                specular [1,1,1];
                                                                specpow 20;};              
define dach    polygonmapper( "texture/dach00.jpg",.2,.2,0){ambient [180/255,115/255,97/255];}

define window list {
  box([-10,-8,2],[10,-7,-1]);
  box([-10,8,0.5],[10,7,-1]);
  box([-10,8,0.5],[-9,-7,-1]);
  box([10,8,0.5],[9,-7,-1]);
  box([-3-.2,-8,-.5],[-3+.2,8,-1]);
  box([3-.2,8,-.5],[3+.2,-8,-1]);
  box([-10,-8,-1],[10,8,-1.1]){clouds;}
  rock;
  scale[0.3,0.3,0.3];
}

define door list {
  box([-7,0,0.2],[-7+.5,25,-1]);
  box([7,0,0.2],[7+.5,25,-1]);
  box([-7,0,5],[7,0.2,-1]);
  box([-7,25,0.2],[7,25-.5,-1]);
  box([-7,0,-1],[7,25,-1.1]){parkett;}
  box([-5,12,-1],[-2,13,-.8]){black;}
  rock;
  scale[0.3,0.3,0.3];
}

define chimney list {
  box ([0,-.75,0],[-1.5,.75,3]);
  box ([0.25,-1,3],[-1.75,1,3.25]);
  rock;
}
building (20,[-10,-20, 0],   // height of the building
             [ 10,-20, 0],   // coords of the bottom of the building
             [ 10, 20, 0],   // the building has no userdefined faces
             [-10, 20, 0]){
             // roof defined by points   
             roofpoint(2) {dach;}
             // texture of the default fronts
             rock;
             fronttri(0,0,[0.5,1.25]){
               faceitem([0,0],[1,1],2,2){
                 window;
                 hole;
                 displacement[0.5,0.4];
               }
             }
             frontrect(1){
               faceitem([0,0],[1,1],3,2){
                 window;
                 hole;
                 displacement[0.5,0.4];
               }
             }
             fronttri(2,0,[0.5,1.25]){
               faceitem([0,0.5],[1,1],2,1){
                 window;
                 hole;
                 displacement[0.5,0.4];
               }
               faceitem([0,0],[1,0.5],1,1){
                 window;
                 hole;
                 door;
                 displacement[0.5,0];
               }
             }
             frontrect(3){
               faceitem([0,0],[1,1],3,2){
                 window;
                 hole;
                 displacement[0.5,0.4];
               }
             }
             snatch([5,5]){chimney;}             
          }

// grass
polygon([-300,-300,0],[300,-300,0],[300,300,0],[-300,300,0]){green;}
