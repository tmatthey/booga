#ifndef _text_bsdl3
#define _text_bsdl3

// We're in 3D Namespace:
using 3D;                

// _______________________________________________________________________ scene

// We need a camera
camera {
  perspective {
    eye [160,30,-5];             // Eye position
    lookat [0,30,-5];           // Looking to this point
    up [0,0,1];                 // What direction is up? (z)
    resolution (600, 400);      // Screen resolution
    eyesep 1;                   // For stereo images ...
    fov 40;                     // Field of view
  }
  background [.5,.5,.5];      // Color of background
}

// We need a light
pointLight (2, [1,1,1]) {    // Point light with intensity 1 
                             // and color [1,1,1] (white)
  position [60,70,0];
}

// Texture for object
define textColor checker {
  even {
    phong {
      ambient [.1,.1,.3];
      diffuse [.3,.3,1];
    }
  }
  odd {
    phong {
      ambient [.2,.1,.2];
      diffuse [.9,.2,.9];
      specular [.4,.2,.4];
      specpow 20;
    }
  }
}

// upper left: no transformation
text (5, 1, "20 Jahre BOOGA!") {
  font "ROMAN";
  textColor;
  translate [0,-1,15];
}
// upper left: no transformation
text (5, 1, "Last modified files") {
  font "ROMAN";
  textColor;
  translate [0,-2,0];
}

// upper right: translation
text (5, 1, "1998 : 30%") {
  font "ROMAN";
  textColor;
  translate [0,5,-10];
}

// lower left: scale + translate
text (5, 1, "2005 : 60%") {
  font "ROMAN";
  textColor;
  translate [0,5,-20];
}

// lower right: scale + rotate + translate
text (5, 1, "2014 : 10%") {
  font "ROMAN";
  textColor;
  translate [0,5,-30];
}
define polyCol polygonmapper( "sunniva.ppm",0.01,
0.01,45,[0.1,1]);
polygon ([-150, -15, -40], [15, -15, -50], [15, 100, -50], [-150, 100, -40]) {
  polyCol;
};

torus (10, 2, [-1.5,1.5,0], [1,0,0]) {
phong { diffuse [.2,.2,.7]; }
  translate [-90,50,-40];
}


#endif // _text_bsdl3
