/*
 * phong.bsdl3 
 *
 * Demonstrate the possibilities of the phong texture.
 *
 * Copyright (C) 1994-96, Christoph Streit <streit@iam.unibe.ch>
 *                        Stephan Amann <amann@iam.unibe.ch>
 *                        University of Berne, Switzerland
 *
 * All rights reserved.
 *
 * This software may be freely copied, modified, and redistributed
 * provided that this copyright notice is preserved on all copies.
 *
 * You may not distribute this software, in whole or in part, as part of
 * any commercial product without the express consent of the authors.
 *
 * There is no warranty or other guarantee of fitness of this software
 * for any purpose.  It is provided solely "as is".
 *
 * -----------------------------------------------------------------------------
 *  $Id: phong.bsdl3,v 1.7 1996/01/12 19:10:34 amann Exp $
 * -----------------------------------------------------------------------------
 */

#ifndef _phong_bsdl3
#define _phong_bsdl3

// We're in 3D Namespace:
using 3D;                

// ____________________________________________________________________ settings

// The color for all spheres
const col [.2,.7,.1];

// Text color
define textCol phong { diffuse [.3,.3,.7]; specular [0,0,1]; specpow 6; }

// ______________________________________________________________________ macros
/*
 * Some local preprocessor macros
 */
 
// Mark axis
#define Tick(mark, x, y)                \
text (.25,.035,mark) {                  \
  font "ROMAN";                         \
  rotateZ 90; rotateX -90; rotateY 180; \
  scale [.5,1,1];                       \
  translate [x,y,0];                    \
  textCol;                              \
}

#define PSphere(x,y,Ks,N) \
sphere (.4, [x,y,0]) {    \
  phong {                 \
    ambient .1*col;       \
    diffuse .45*col;      \
    specular Ks*col;      \
    specpow N;            \
  }                       \
} 
               
// _______________________________________________________________________ scene

// We need a camera
camera {
  perspective {
    eye [0,0,6];                // Eye position
    lookat [0,0,0];             // Looking to this point
    up [0,1,0];                 // What direction is up? (y)
    resolution (600, 600);      // Screen resolution
    eyesep 1;                   // For stereo images ...
    fov 60;                     // Field of view: horizontal, vertical
  }
  background [.6,.6,.6];      // Color of Background
}

// We need a light
pointLight (1, [1,1,1]) {    // Point light with intensity 1 
                             // and color [1,1,1] (white)
  position [0,0,100];
}

/*
 * demonstration of ambient and diffues
 */
list {
  // set title
  text (.3,.05,"Examples for Phong Texture: Ka=0.1, Kd=0.45") { 
    font "ROMAN"; 
    rotateZ 90; 
    rotateX -90; 
    rotateY 180; 
    scale [.5,1,1];          
    translate [-2.9,2.6,0]; // move to the right place
    textCol;                // text color
  }

  // X-Axis
  Tick("N=1", -2.2, -2.9);
  Tick("N=3", -1.2, -2.9);
  Tick("N=5", -0.2, -2.9);
  Tick("N=10", 0.75, -2.9);
  Tick("N=27", 1.75, -2.9);

  // Y-Axis
  Tick("Ks=0.2", -3.2, -2.1);
  Tick("Ks=0.4", -3.2, -1.1);
  Tick("Ks=0.6", -3.2, -0.1);
  Tick("Ks=0.8", -3.2,  0.9);
  Tick("Ks=1.0", -3.2,  1.9);
}

// Leftmost row: 
list {
  PSphere(-2, -2, .2, 1);
  PSphere(-2, -1, .4, 1);
  PSphere(-2,  0, .6, 1);
  PSphere(-2,  1, .8, 1);
  PSphere(-2,  2, 1., 1);
}

list {
  PSphere(-1, -2, .2, 3);
  PSphere(-1, -1, .4, 3);
  PSphere(-1,  0, .6, 3);
  PSphere(-1,  1, .8, 3);
  PSphere(-1,  2, 1., 3);
}

list {
  PSphere(0, -2, .2, 5);
  PSphere(0, -1, .4, 5);
  PSphere(0,  0, .6, 5);
  PSphere(0,  1, .8, 5);
  PSphere(0,  2, 1., 5);
}

list {
  PSphere(1, -2, .2, 10);
  PSphere(1, -1, .4, 10);
  PSphere(1,  0, .6, 10);
  PSphere(1,  1, .8, 10);
  PSphere(1,  2, 1., 10);
}

list{
  PSphere(2, -2, .2, 27);
  PSphere(2, -1, .4, 27);
  PSphere(2,  0, .6, 27);
  PSphere(2,  1, .8, 27);
  PSphere(2,  2, 1., 27);
}

#endif // _phong_bsdl3

