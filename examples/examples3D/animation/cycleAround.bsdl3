/*
 * $RCSfile: cycleAround.bsdl3,v $
 *
 * This example shows how cycle works. A list of objects is shown
 * one by one. 
 *
 *
 * Copyright (C) 1996, Thierry Matthey <matthey@iam.unibe.ch>
 *                     University of Berne, Switzerland
 *
 * All rights reserved.
 *
 * This software may be freely copied, modified, and redistributed
 * provided that this copyright notice is preserved on all copies.
 *
 * You may not distribute this software, in whole or in part, as part of
 * any commercial product without the express consent of the authors.
 *
 * There is no warranty or other guarantee of fitness of this software
 * for any purpose.  It is provided solely "as is".
 *
 * -----------------------------------------------------------------------------
 *  $Id: cycleAround.bsdl3,v 1.1 1996/11/18 15:43:28 streit Exp $
 * -----------------------------------------------------------------------------
 */
 
using 3D;

//
// Definition of the camera and lightsource
//

camera {
  perspective {
    eye [7,4,10];
    lookat [-2, -2, 0];
    resolution (512, 512);
  }
  background [.3,.3,.3];
};

pointLight (3, [1,1,1]) { position [  40,   40, 40]; }

//
// Definition of colors
//

define green  matte { diffuse [.1,.5,.1]; }
define blue   matte { diffuse [.1,.1,.5]; }
define red    matte { diffuse [.5,.1,.1]; }

//
// A box changes the color
//

define colorbox cycle{
  action(0,3,0){        // show the 3 colors from frame 0 to 3, endless
    cycling;            // default values: "id",0,1,0
  }
  box ([0,-4,0], [2,-2,2]){red;};
  box ([0,-4,0], [2,-2,2]){green;};
  box ([0,-4,0], [2,-2,2]){blue;};  
}

//
// Slideshow of all primities 3D
//

define primitives cycle{
  action(0,11,0){
    cycling;
  }
  box ([-2,0,0],[0,2,2]){red;};
  cone (.6, [-1.6,.5,1], 1.4, [-1.5, 2.3, 0]) {red;};
  cylinder (1, [-1.2,.5,1], [-1.5, 2.3, 0]) {red;};
  disc (1.4, [-1.5,1.5,0], [0,0,1]) {red;};
  nullobject;
  polygon ([-1.5, 2, 0], 
           [-1.9, 2.8, 0], [-2.5, 2.8, 0], [-3, 2.2, 0], 
           [-2.7, 1.6, 0], [-2.4, 1.8, 0], 
           [-2.5, .2, 0], [-.5, .2, 0],
           [-.6, 1.8, 0], [-.3, 1.6, 0], 
           [0, 2.2, 0], [-.5, 2.8, 0], [-1.1, 2.8, 0]) {red;}
  polyextrude(1,[ 0.200000, -0.776400 ,0],
    [ 0.220000, -0.773200,0],
    [ 0.245600, -0.756400 ,0],
    [ 0.277600, -0.702000 ,0],
    [ 0.488800, -0.207600 ,0],
    [ 0.504800, -0.207600 ,0],
    [ 0.740800, -0.739600 ,0],
    [ 0.756000, -0.761200 ,0],
    [ 0.774400, -0.772400 ,0],
    [ 0.800000, -0.776400 ,0],
    [ 0.800000, -0.792400 ,0],
    [ 0.579200, -0.792400 ,0],
    [ 0.579200, -0.776400 ,0],
    [ 0.621600, -0.771600 ,0],
    [ 0.633600, -0.762800 ,0],
    [ 0.639200, -0.744400 ,0],
    [ 0.620800, -0.684400 ,0],
    [ 0.587200, -0.604400 ,0],
    [ 0.360800, -0.604400 ,0],
    [ 0.319200, -0.706800 ,0],
    [ 0.312000, -0.739600 ,0],
    [ 0.318400, -0.761200 ,0],
    [ 0.334400, -0.771600 ,0],
    [ 0.371200, -0.776400 ,0],
    [ 0.371200, -0.792400 ,0],
    [ 0.200000, -0.792400 ,0]){hole(

    [ 0.374400, -0.570000 ,0],
    [ 0.574400, -0.570000 ,0],
    [ 0.473600, -0.330800 ,0]); scale[5,5,1];red;rotateX(90);rotateZ(90);translate[-3,-2,4];}
  sphere (1.4, [-1.5,1.5,0]) {red;}
  text (1, 0.5, "nrpl") {
    font "ROMAN";
    red;
    translate[-2,-1.5,0];
  }
  torus (1, .4, [-1.5,1.5,0], [0,0,1]) {red;}
  triangle ([-6,.5,0.1], [-3.5,1.5,0.1], [-4.5,2.8,0]) {red;}
}

//_____________________________________________________________

colorbox;
primitives;
