

Terminals which are not used:

   t3PUNKTE


State 36 contains 1 shift/reduce conflict.
State 75 contains 7 reduce/reduce conflicts.
State 91 contains 1 shift/reduce conflict.
State 92 contains 2 shift/reduce conflicts.
State 94 contains 1 shift/reduce conflict.
State 95 contains 1 shift/reduce conflict.
State 96 contains 1 shift/reduce conflict.
State 99 contains 1 shift/reduce conflict.
State 100 contains 1 shift/reduce conflict.
State 101 contains 1 shift/reduce conflict.
State 102 contains 2 shift/reduce conflicts.
State 103 contains 1 shift/reduce conflict.
State 104 contains 1 shift/reduce conflict.
State 105 contains 1 shift/reduce conflict.
State 119 contains 1 shift/reduce conflict.
State 122 contains 1 shift/reduce conflict.
State 141 contains 2 reduce/reduce conflicts.
State 159 contains 1 shift/reduce conflict.
State 161 contains 1 shift/reduce conflict.
State 188 contains 1 shift/reduce conflict.
State 189 contains 1 shift/reduce conflict.
State 190 contains 1 shift/reduce conflict.
State 227 contains 2 shift/reduce conflicts.

Grammar
rule 1    @1 ->		/* empty */
rule 2    Main -> @1 Programm
rule 3    Programm ->		/* empty */
rule 4    Programm -> Programm Deklaration
rule 5    @2 ->		/* empty */
rule 6    Deklaration -> @2 Klassenspezifizierer ';'
rule 7    @3 ->		/* empty */
rule 8    Deklaration -> tTEMPLATE '<' TemplateArgumentListe '>' @3 Klassenspezifizierer ';'
rule 9    TemplateArgumentListe -> TemplateArgument
rule 10   TemplateArgumentListe -> TemplateArgumentListe tKOMMA TemplateArgument
rule 11   TemplateArgument -> Typargument
rule 12   TemplateArgument -> ArgumentDeklaration
rule 13   Typargument -> tCLASS Bezeichner
rule 14   Klassenspezifizierer -> Klassenkopf '{' Elementliste '}'
rule 15   Klassenspezifizierer -> Klassenkopf
rule 16   Klassenkopf -> KlassenschluesselKlassenname
rule 17   Klassenkopf -> KlassenschluesselKlassenname BasisSpez
rule 18   KlassenschluesselKlassenname -> Klassenschluessel Klassenname
rule 19   Klassenname -> Bezeichner
rule 20   Klassenname -> TemplateKlassenname
rule 21   Klassenschluessel -> tCLASS
rule 22   Klassenschluessel -> tSTRUCT
rule 23   Elementliste ->		/* empty */
rule 24   Elementliste -> Elementliste Element
rule 25   Element -> Elementdeklaration
rule 26   Element -> Zugriffsspezifizierer tDOPPELPUNKT
rule 27   Elementdeklaration -> DeklSpezifiziererliste ElementDeklaratorliste ';'
rule 28   Elementdeklaration -> DeklSpezifiziererliste ';'
rule 29   Elementdeklaration -> ';'
rule 30   Elementdeklaration -> ElementDeklaratorliste ';'
rule 31   Elementdeklaration -> Funktionsdefinition
rule 32   @4 ->		/* empty */
rule 33   Elementdeklaration -> @4 Klassenspezifizierer
rule 34   Elementdeklaration -> tFRIEND Klassenschluessel Klassenname
rule 35   Elementdeklaration -> EnumSpezifizierer
rule 36   Elementdeklaration -> tUNION '{' '}'
rule 37   ElementDeklaratorliste -> ElementDeklarator
rule 38   ElementDeklaratorliste -> ElementDeklaratorliste tKOMMA ElementDeklarator
rule 39   ElementDeklarator -> Deklarator
rule 40   Zugriffsspezifizierer -> tPRIVATE
rule 41   Zugriffsspezifizierer -> tPUBLIC
rule 42   Zugriffsspezifizierer -> tPROTECTED
rule 43   QualifizierterName -> QualifizierterKlassenname tGELTUNGSBEREICHOPERATOR Name
rule 44   QualifizierterTypname -> QualifizierterKlassenname
rule 45   QualifizierterKlassenname -> Klassenname
rule 46   QualifizierterKlassenname -> Klassenname tGELTUNGSBEREICHOPERATOR QualifizierterKlassenname
rule 47   BasisSpez -> tDOPPELPUNKT Basisliste
rule 48   @5 ->		/* empty */
rule 49   Basisliste -> @5 Basisspezifizierer
rule 50   @6 ->		/* empty */
rule 51   Basisliste -> Basisliste tKOMMA @6 Basisspezifizierer
rule 52   Basisspezifizierer -> QualifizierterKlassenname
rule 53   Basisspezifizierer -> Zugriffsspezifizierer QualifizierterKlassenname
rule 54   Basisspezifizierer -> tVIRTUAL QualifizierterKlassenname
rule 55   Basisspezifizierer -> tVIRTUAL Zugriffsspezifizierer QualifizierterKlassenname
rule 56   Basisspezifizierer -> Zugriffsspezifizierer tVIRTUAL QualifizierterKlassenname
rule 57   DeklSpezifiziererliste -> DeklSpezlisteStandard
rule 58   DeklSpezifiziererliste -> DeklSpezZusatzListe DeklSpezlisteStandard
rule 59   DeklSpezifiziererliste -> DeklSpezlisteCustom
rule 60   DeklSpezifiziererliste -> DeklSpezZusatzListe DeklSpezlisteCustom
rule 61   DeklSpezlisteStandard -> DeklSpezifiziererStandard
rule 62   DeklSpezlisteStandard -> DeklSpezlisteStandard DeklSpezifiziererStandard
rule 63   DeklSpezifiziererStandard -> StandardTypname DeklSpezZusatzListe
rule 64   DeklSpezifiziererStandard -> StandardTypname
rule 65   DeklSpezZusatzListe -> DeklSpezifiziererZusatz
rule 66   DeklSpezZusatzListe -> DeklSpezZusatzListe DeklSpezifiziererZusatz
rule 67   DeklSpezifiziererZusatz -> Speicherklassenspezifizierer
rule 68   DeklSpezifiziererZusatz -> FktSpezifizierer
rule 69   DeklSpezifiziererZusatz -> CvQualifizierer
rule 70   DeklSpezifiziererZusatz -> tFRIEND
rule 71   StandardTypname -> tCHAR
rule 72   StandardTypname -> tSHORT
rule 73   StandardTypname -> tINT
rule 74   StandardTypname -> tLONG
rule 75   StandardTypname -> tSIGNED
rule 76   StandardTypname -> tUNSIGNED
rule 77   StandardTypname -> tFLOAT
rule 78   StandardTypname -> tDOUBLE
rule 79   StandardTypname -> tVOID
rule 80   DeklSpezlisteCustom -> QualifizierterKlassenname DeklSpezZusatzListe
rule 81   DeklSpezlisteCustom -> QualifizierterKlassenname
rule 82   Deklarator -> Dname
rule 83   Deklarator -> Zeigeroperator Deklarator
rule 84   Deklarator -> Deklarator '[' KonstanterAusdruck ']'
rule 85   Deklarator -> Deklarator '[' ']'
rule 86   Dname -> Name
rule 87   Dname -> QualifizierterTypname
rule 88   Name -> Bezeichner
rule 89   Name -> Operatorfunktionsname
rule 90   Name -> Konversionsfunktionsname
rule 91   Name -> QualifizierterName
rule 92   Speicherklassenspezifizierer -> tAUTO
rule 93   Speicherklassenspezifizierer -> tREGISTER
rule 94   Speicherklassenspezifizierer -> tSTATIC
rule 95   Speicherklassenspezifizierer -> tEXTERN
rule 96   Zeigeroperator -> '*' CvQualifiziererliste
rule 97   Zeigeroperator -> '&' CvQualifiziererliste
rule 98   CvQualifiziererliste ->		/* empty */
rule 99   CvQualifiziererliste -> CvQualifiziererliste CvQualifizierer
rule 100  CvQualifizierer -> tCONST
rule 101  CvQualifizierer -> tVOLATILE
rule 102  Argumentliste ->		/* empty */
rule 103  Argumentliste -> ArgDeklarationsliste
rule 104  @7 ->		/* empty */
rule 105  ArgDeklarationsliste -> @7 ArgumentDeklaration
rule 106  @8 ->		/* empty */
rule 107  ArgDeklarationsliste -> ArgDeklarationsliste tKOMMA @8 ArgumentDeklaration
rule 108  ArgumentDeklaration -> DeklSpezifiziererliste Deklarator
rule 109  ArgumentDeklaration -> DeklSpezifiziererliste Deklarator '=' Ausdruck
rule 110  ArgumentDeklaration -> DeklSpezifiziererliste '=' Ausdruck
rule 111  ArgumentDeklaration -> DeklSpezifiziererliste
rule 112  ArgumentDeklaration -> DeklSpezifiziererliste Zeigeroperator
rule 113  Funktionsdefinition -> DeklSpezifiziererliste FktDeklarator KtorInitialisiererOpt FktRumpf
rule 114  Funktionsdefinition -> FktDeklarator KtorInitialisiererOpt FktRumpf
rule 115  Funktionsdefinition -> Destruktor
rule 116  FktRumpf -> '{' '}'
rule 117  FktRumpf -> ';'
rule 118  FktRumpf -> tPUREVIRTUAL ';'
rule 119  FktSpezifiziererOpt ->		/* empty */
rule 120  FktSpezifiziererOpt -> FktSpezifizierer
rule 121  FktSpezifizierer -> tINLINE
rule 122  FktSpezifizierer -> tVIRTUAL
rule 123  @9 ->		/* empty */
rule 124  Destruktor -> FktSpezifiziererOpt '~' Bezeichner @9 '(' VoidOpt ')' FktRumpf
rule 125  VoidOpt ->		/* empty */
rule 126  VoidOpt -> tVOID
rule 127  KtorInitialisiererOpt ->		/* empty */
rule 128  KtorInitialisiererOpt -> KtorInitialisierer
rule 129  KtorInitialisierer -> tDOPPELPUNKT ElementInitialisiererliste
rule 130  @10 ->		/* empty */
rule 131  FktDeklarator -> FktDeklaratorName @10 '(' Argumentliste ')' CvQualifiziererliste
rule 132  FktDeklaratorName -> Dname
rule 133  FktDeklaratorName -> Zeigeroperator FktDeklaratorName
rule 134  FktDeklaratorName -> '(' Dname ')'
rule 135  FktDeklaratorName -> '(' Zeigeroperator FktDeklaratorName ')'
rule 136  ElementInitialisiererliste -> ElementInitialisierer
rule 137  ElementInitialisiererliste -> ElementInitialisiererliste tKOMMA ElementInitialisierer
rule 138  ElementInitialisierer -> QualifizierterKlassenname '(' Ausdrucksliste ')'
rule 139  ElementInitialisierer -> QualifizierterKlassenname '(' ')'
rule 140  Ausdrucksliste -> Zuweisungsausdruck
rule 141  Ausdrucksliste -> Ausdrucksliste tKOMMA Zuweisungsausdruck
rule 142  Zuweisungsausdruck -> Bezeichner '=' tEXPRESSION
rule 143  Zuweisungsausdruck -> Bezeichner
rule 144  Zuweisungsausdruck -> tANYTHINGELSE
rule 145  Operatorfunktionsname -> tOPERATOR Operator
rule 146  Operator -> tNEW
rule 147  Operator -> tDELETE
rule 148  Operator -> tKOMMA
rule 149  Operator -> '!'
rule 150  Operator -> '%'
rule 151  Operator -> '^'
rule 152  Operator -> '&'
rule 153  Operator -> '*'
rule 154  Operator -> '(' ')'
rule 155  Operator -> '-'
rule 156  Operator -> '+'
rule 157  Operator -> '='
rule 158  Operator -> '|'
rule 159  Operator -> '~'
rule 160  Operator -> '[' ']'
rule 161  Operator -> '<'
rule 162  Operator -> '>'
rule 163  Operator -> '/'
rule 164  Operator -> ','
rule 165  Operator -> '-' '>'
rule 166  Operator -> '+' '+'
rule 167  Operator -> '-' '-'
rule 168  Operator -> '-' '>' '*'
rule 169  Operator -> '<' '<'
rule 170  Operator -> '>' '>'
rule 171  Operator -> '<' '='
rule 172  Operator -> '>' '='
rule 173  Operator -> '=' '='
rule 174  Operator -> '!' '='
rule 175  Operator -> '&' '&'
rule 176  Operator -> '|' '|'
rule 177  Operator -> '*' '='
rule 178  Operator -> '/' '='
rule 179  Operator -> '%' '='
rule 180  Operator -> '+' '='
rule 181  Operator -> '-' '='
rule 182  Operator -> '<' '<' '='
rule 183  Operator -> '>' '>' '='
rule 184  Operator -> '&' '='
rule 185  Operator -> '^' '='
rule 186  Operator -> '|' '='
rule 187  Konversionsfunktionsname -> tOPERATOR Konversionstypname
rule 188  Konversionstypname -> Typspezifizierer
rule 189  Konversionstypname -> Typspezifizierer Zeigeroperator
rule 190  Typspezifizierer -> DeklSpezlisteStandard
rule 191  Typspezifizierer -> DeklSpezlisteCustom
rule 192  TemplateKlassenname -> TemplateName '<' TemplateArgListe '>'
rule 193  TemplateName -> Bezeichner
rule 194  TemplateArgListe -> TemplateArg
rule 195  TemplateArgListe -> TemplateArgListe tKOMMA TemplateArg
rule 196  TemplateArg -> Typname
rule 197  Typname -> Typspezifizierer AbstrakterDeklaratorOpt
rule 198  Typname -> DeklSpezZusatzListe Typspezifizierer AbstrakterDeklaratorOpt
rule 199  AbstrakterDeklarator -> Zeigeroperator AbstrakterDeklaratorOpt
rule 200  AbstrakterDeklarator -> AbstrakterDeklaratorOpt '(' Argumentliste ')' CvQualifiziererliste
rule 201  AbstrakterDeklarator -> AbstrakterDeklaratorOpt '[' KonstanterAusdruckOpt ']'
rule 202  AbstrakterDeklarator -> '(' AbstrakterDeklarator ')'
rule 203  AbstrakterDeklaratorOpt ->		/* empty */
rule 204  AbstrakterDeklaratorOpt -> AbstrakterDeklarator
rule 205  KonstanterAusdruckOpt ->		/* empty */
rule 206  KonstanterAusdruckOpt -> KonstanterAusdruck
rule 207  EnumSpezifizierer -> tENUM Bezeichner '{' '}'
rule 208  EnumSpezifizierer -> tENUM '{' '}'
rule 209  Bezeichner -> tIDENTIFIER
rule 210  KonstanterAusdruck -> tCONSTEXPR
rule 211  Ausdruck -> tEXPRESSION

Terminals, with rules where they appear

$ (-1)
'!' (33) 149 174
'%' (37) 150 179
'&' (38) 97 152 175 184
'(' (40) 124 131 134 135 138 139 154 200 202
')' (41) 124 131 134 135 138 139 154 200 202
'*' (42) 96 153 168 177
'+' (43) 156 166 180
',' (44) 164
'-' (45) 155 165 167 168 181
'/' (47) 163 178
';' (59) 6 8 27 28 29 30 117 118
'<' (60) 8 161 169 171 182 192
'=' (61) 109 110 142 157 171 172 173 174 177 178 179 180 181 182 183
    184 185 186
'>' (62) 8 162 165 168 170 172 183 192
'[' (91) 84 85 160 201
']' (93) 84 85 160 201
'^' (94) 151 185
'{' (123) 14 36 116 207 208
'|' (124) 158 176 186
'}' (125) 14 36 116 207 208
'~' (126) 124 159
error (256)
tCLASS (258) 13 21
tSTRUCT (259) 22
tUNION (260) 36
tPRIVATE (261) 40
tPUBLIC (262) 41
tPROTECTED (263) 42
tVIRTUAL (264) 54 55 56 122
tPUREVIRTUAL (265) 118
tINLINE (266) 121
tEXPRESSION (267) 142 211
tCONSTEXPR (268) 210
tOPERATOR (269) 145 187
tCONST (270) 100
tSTATIC (271) 94
tFRIEND (272) 34 70
tENUM (273) 207 208
tVOLATILE (274) 101
tGELTUNGSBEREICHOPERATOR (275) 43 46
t3PUNKTE (276)
tKOMMA (277) 10 38 51 107 137 141 148 195
tIDENTIFIER (278) 209
tDOPPELPUNKT (279) 26 47 129
tTEMPLATE (280) 8
tANYTHINGELSE (281) 144
tCHAR (282) 71
tSHORT (283) 72
tINT (284) 73
tLONG (285) 74
tSIGNED (286) 75
tUNSIGNED (287) 76
tFLOAT (288) 77
tDOUBLE (289) 78
tVOID (290) 79 126
tAUTO (291) 92
tREGISTER (292) 93
tEXTERN (293) 95
tNEW (294) 146
tDELETE (295) 147

Nonterminals, with rules where they appear

Main (62)
    on left: 2
@1 (63)
    on left: 1, on right: 2
Programm (64)
    on left: 3 4, on right: 2 4
Deklaration (65)
    on left: 6 8, on right: 4
@2 (66)
    on left: 5, on right: 6
@3 (67)
    on left: 7, on right: 8
TemplateArgumentListe (68)
    on left: 9 10, on right: 8 10
TemplateArgument (69)
    on left: 11 12, on right: 9 10
Typargument (70)
    on left: 13, on right: 11
Klassenspezifizierer (71)
    on left: 14 15, on right: 6 8 33
Klassenkopf (72)
    on left: 16 17, on right: 14 15
KlassenschluesselKlassenname (73)
    on left: 18, on right: 16 17
Klassenname (74)
    on left: 19 20, on right: 18 34 45 46
Klassenschluessel (75)
    on left: 21 22, on right: 18 34
Elementliste (76)
    on left: 23 24, on right: 14 24
Element (77)
    on left: 25 26, on right: 24
Elementdeklaration (78)
    on left: 27 28 29 30 31 33 34 35 36, on right: 25
@4 (79)
    on left: 32, on right: 33
ElementDeklaratorliste (80)
    on left: 37 38, on right: 27 30 38
ElementDeklarator (81)
    on left: 39, on right: 37 38
Zugriffsspezifizierer (82)
    on left: 40 41 42, on right: 26 53 55 56
QualifizierterName (83)
    on left: 43, on right: 91
QualifizierterTypname (84)
    on left: 44, on right: 87
QualifizierterKlassenname (85)
    on left: 45 46, on right: 43 44 46 52 53 54 55 56 80 81 138 139
BasisSpez (86)
    on left: 47, on right: 17
Basisliste (87)
    on left: 49 51, on right: 47 51
@5 (88)
    on left: 48, on right: 49
@6 (89)
    on left: 50, on right: 51
Basisspezifizierer (90)
    on left: 52 53 54 55 56, on right: 49 51
DeklSpezifiziererliste (91)
    on left: 57 58 59 60, on right: 27 28 108 109 110 111 112 113
DeklSpezlisteStandard (92)
    on left: 61 62, on right: 57 58 62 190
DeklSpezifiziererStandard (93)
    on left: 63 64, on right: 61 62
DeklSpezZusatzListe (94)
    on left: 65 66, on right: 58 60 63 66 80 198
DeklSpezifiziererZusatz (95)
    on left: 67 68 69 70, on right: 65 66
StandardTypname (96)
    on left: 71 72 73 74 75 76 77 78 79, on right: 63 64
DeklSpezlisteCustom (97)
    on left: 80 81, on right: 59 60 191
Deklarator (98)
    on left: 82 83 84 85, on right: 39 83 84 85 108 109
Dname (99)
    on left: 86 87, on right: 82 132 134
Name (100)
    on left: 88 89 90 91, on right: 43 86
Speicherklassenspezifizierer (101)
    on left: 92 93 94 95, on right: 67
Zeigeroperator (102)
    on left: 96 97, on right: 83 112 133 135 189 199
CvQualifiziererliste (103)
    on left: 98 99, on right: 96 97 99 131 200
CvQualifizierer (104)
    on left: 100 101, on right: 69 99
Argumentliste (105)
    on left: 102 103, on right: 131 200
ArgDeklarationsliste (106)
    on left: 105 107, on right: 103 107
@7 (107)
    on left: 104, on right: 105
@8 (108)
    on left: 106, on right: 107
ArgumentDeklaration (109)
    on left: 108 109 110 111 112, on right: 12 105 107
Funktionsdefinition (110)
    on left: 113 114 115, on right: 31
FktRumpf (111)
    on left: 116 117 118, on right: 113 114 124
FktSpezifiziererOpt (112)
    on left: 119 120, on right: 124
FktSpezifizierer (113)
    on left: 121 122, on right: 68 120
Destruktor (114)
    on left: 124, on right: 115
@9 (115)
    on left: 123, on right: 124
VoidOpt (116)
    on left: 125 126, on right: 124
KtorInitialisiererOpt (117)
    on left: 127 128, on right: 113 114
KtorInitialisierer (118)
    on left: 129, on right: 128
FktDeklarator (119)
    on left: 131, on right: 113 114
@10 (120)
    on left: 130, on right: 131
FktDeklaratorName (121)
    on left: 132 133 134 135, on right: 131 133 135
ElementInitialisiererliste (122)
    on left: 136 137, on right: 129 137
ElementInitialisierer (123)
    on left: 138 139, on right: 136 137
Ausdrucksliste (124)
    on left: 140 141, on right: 138 141
Zuweisungsausdruck (125)
    on left: 142 143 144, on right: 140 141
Operatorfunktionsname (126)
    on left: 145, on right: 89
Operator (127)
    on left: 146 147 148 149 150 151 152 153 154 155 156 157 158 159
    160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175
    176 177 178 179 180 181 182 183 184 185 186, on right: 145
Konversionsfunktionsname (128)
    on left: 187, on right: 90
Konversionstypname (129)
    on left: 188 189, on right: 187
Typspezifizierer (130)
    on left: 190 191, on right: 188 189 197 198
TemplateKlassenname (131)
    on left: 192, on right: 20
TemplateName (132)
    on left: 193, on right: 192
TemplateArgListe (133)
    on left: 194 195, on right: 192 195
TemplateArg (134)
    on left: 196, on right: 194 195
Typname (135)
    on left: 197 198, on right: 196
AbstrakterDeklarator (136)
    on left: 199 200 201 202, on right: 202 204
AbstrakterDeklaratorOpt (137)
    on left: 203 204, on right: 197 198 199 200 201
KonstanterAusdruckOpt (138)
    on left: 205 206, on right: 201
EnumSpezifizierer (139)
    on left: 207 208, on right: 35
Bezeichner (140)
    on left: 209, on right: 13 19 88 124 142 143 193 207
KonstanterAusdruck (141)
    on left: 210, on right: 84 206
Ausdruck (142)
    on left: 211, on right: 109 110


state 0

    $default	reduce using rule 1 (@1)

    Main	go to state 294
    @1  	go to state 1



state 1

    Main  ->  @1 . Programm   (rule 2)

    $default	reduce using rule 3 (Programm)

    Programm	go to state 2



state 2

    Main  ->  @1 Programm .   (rule 2)
    Programm  ->  Programm . Deklaration   (rule 4)

    tTEMPLATE	shift, and go to state 3

    $   	reduce using rule 2 (Main)
    $default	reduce using rule 5 (@2)

    Deklaration	go to state 4
    @2  	go to state 5



state 3

    Deklaration  ->  tTEMPLATE . '<' TemplateArgumentListe '>' @3 Klassenspezifizierer ';'   (rule 8)

    '<' 	shift, and go to state 6



state 4

    Programm  ->  Programm Deklaration .   (rule 4)

    $default	reduce using rule 4 (Programm)



state 5

    Deklaration  ->  @2 . Klassenspezifizierer ';'   (rule 6)

    tCLASS	shift, and go to state 7
    tSTRUCT	shift, and go to state 8

    Klassenspezifizierer	go to state 9
    Klassenkopf	go to state 10
    KlassenschluesselKlassenname	go to state 11
    Klassenschluessel	go to state 12



state 6

    Deklaration  ->  tTEMPLATE '<' . TemplateArgumentListe '>' @3 Klassenspezifizierer ';'   (rule 8)

    tCLASS	shift, and go to state 13
    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    TemplateArgumentListe	go to state 33
    TemplateArgument	go to state 34
    Typargument	go to state 35
    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 37
    DeklSpezifiziererliste	go to state 38
    DeklSpezlisteStandard	go to state 39
    DeklSpezifiziererStandard	go to state 40
    DeklSpezZusatzListe	go to state 41
    DeklSpezifiziererZusatz	go to state 42
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 44
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    ArgumentDeklaration	go to state 47
    FktSpezifizierer	go to state 48
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 7

    Klassenschluessel  ->  tCLASS .   (rule 21)

    $default	reduce using rule 21 (Klassenschluessel)



state 8

    Klassenschluessel  ->  tSTRUCT .   (rule 22)

    $default	reduce using rule 22 (Klassenschluessel)



state 9

    Deklaration  ->  @2 Klassenspezifizierer . ';'   (rule 6)

    ';' 	shift, and go to state 52



state 10

    Klassenspezifizierer  ->  Klassenkopf . '{' Elementliste '}'   (rule 14)
    Klassenspezifizierer  ->  Klassenkopf .   (rule 15)

    '{' 	shift, and go to state 53

    $default	reduce using rule 15 (Klassenspezifizierer)



state 11

    Klassenkopf  ->  KlassenschluesselKlassenname .   (rule 16)
    Klassenkopf  ->  KlassenschluesselKlassenname . BasisSpez   (rule 17)

    tDOPPELPUNKT	shift, and go to state 54

    $default	reduce using rule 16 (Klassenkopf)

    BasisSpez	go to state 55



state 12

    KlassenschluesselKlassenname  ->  Klassenschluessel . Klassenname   (rule 18)

    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 56
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 13

    Typargument  ->  tCLASS . Bezeichner   (rule 13)

    tIDENTIFIER	shift, and go to state 20

    Bezeichner	go to state 57



state 14

    FktSpezifizierer  ->  tVIRTUAL .   (rule 122)

    $default	reduce using rule 122 (FktSpezifizierer)



state 15

    FktSpezifizierer  ->  tINLINE .   (rule 121)

    $default	reduce using rule 121 (FktSpezifizierer)



state 16

    CvQualifizierer  ->  tCONST .   (rule 100)

    $default	reduce using rule 100 (CvQualifizierer)



state 17

    Speicherklassenspezifizierer  ->  tSTATIC .   (rule 94)

    $default	reduce using rule 94 (Speicherklassenspezifizierer)



state 18

    DeklSpezifiziererZusatz  ->  tFRIEND .   (rule 70)

    $default	reduce using rule 70 (DeklSpezifiziererZusatz)



state 19

    CvQualifizierer  ->  tVOLATILE .   (rule 101)

    $default	reduce using rule 101 (CvQualifizierer)



state 20

    Bezeichner  ->  tIDENTIFIER .   (rule 209)

    $default	reduce using rule 209 (Bezeichner)



state 21

    StandardTypname  ->  tCHAR .   (rule 71)

    $default	reduce using rule 71 (StandardTypname)



state 22

    StandardTypname  ->  tSHORT .   (rule 72)

    $default	reduce using rule 72 (StandardTypname)



state 23

    StandardTypname  ->  tINT .   (rule 73)

    $default	reduce using rule 73 (StandardTypname)



state 24

    StandardTypname  ->  tLONG .   (rule 74)

    $default	reduce using rule 74 (StandardTypname)



state 25

    StandardTypname  ->  tSIGNED .   (rule 75)

    $default	reduce using rule 75 (StandardTypname)



state 26

    StandardTypname  ->  tUNSIGNED .   (rule 76)

    $default	reduce using rule 76 (StandardTypname)



state 27

    StandardTypname  ->  tFLOAT .   (rule 77)

    $default	reduce using rule 77 (StandardTypname)



state 28

    StandardTypname  ->  tDOUBLE .   (rule 78)

    $default	reduce using rule 78 (StandardTypname)



state 29

    StandardTypname  ->  tVOID .   (rule 79)

    $default	reduce using rule 79 (StandardTypname)



state 30

    Speicherklassenspezifizierer  ->  tAUTO .   (rule 92)

    $default	reduce using rule 92 (Speicherklassenspezifizierer)



state 31

    Speicherklassenspezifizierer  ->  tREGISTER .   (rule 93)

    $default	reduce using rule 93 (Speicherklassenspezifizierer)



state 32

    Speicherklassenspezifizierer  ->  tEXTERN .   (rule 95)

    $default	reduce using rule 95 (Speicherklassenspezifizierer)



state 33

    Deklaration  ->  tTEMPLATE '<' TemplateArgumentListe . '>' @3 Klassenspezifizierer ';'   (rule 8)
    TemplateArgumentListe  ->  TemplateArgumentListe . tKOMMA TemplateArgument   (rule 10)

    tKOMMA	shift, and go to state 58
    '>' 	shift, and go to state 59



state 34

    TemplateArgumentListe  ->  TemplateArgument .   (rule 9)

    $default	reduce using rule 9 (TemplateArgumentListe)



state 35

    TemplateArgument  ->  Typargument .   (rule 11)

    $default	reduce using rule 11 (TemplateArgument)



state 36

    QualifizierterKlassenname  ->  Klassenname .   (rule 45)
    QualifizierterKlassenname  ->  Klassenname . tGELTUNGSBEREICHOPERATOR QualifizierterKlassenname   (rule 46)

    tGELTUNGSBEREICHOPERATOR	shift, and go to state 60

    tGELTUNGSBEREICHOPERATOR	[reduce using rule 45 (QualifizierterKlassenname)]
    $default	reduce using rule 45 (QualifizierterKlassenname)



state 37

    DeklSpezlisteCustom  ->  QualifizierterKlassenname . DeklSpezZusatzListe   (rule 80)
    DeklSpezlisteCustom  ->  QualifizierterKlassenname .   (rule 81)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    $default	reduce using rule 81 (DeklSpezlisteCustom)

    DeklSpezZusatzListe	go to state 61
    DeklSpezifiziererZusatz	go to state 42
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    FktSpezifizierer	go to state 48



state 38

    ArgumentDeklaration  ->  DeklSpezifiziererliste . Deklarator   (rule 108)
    ArgumentDeklaration  ->  DeklSpezifiziererliste . Deklarator '=' Ausdruck   (rule 109)
    ArgumentDeklaration  ->  DeklSpezifiziererliste . '=' Ausdruck   (rule 110)
    ArgumentDeklaration  ->  DeklSpezifiziererliste .   (rule 111)
    ArgumentDeklaration  ->  DeklSpezifiziererliste . Zeigeroperator   (rule 112)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '=' 	shift, and go to state 65

    $default	reduce using rule 111 (ArgumentDeklaration)

    Klassenname	go to state 36
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 68
    Deklarator	go to state 69
    Dname	go to state 70
    Name	go to state 71
    Zeigeroperator	go to state 72
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 39

    DeklSpezifiziererliste  ->  DeklSpezlisteStandard .   (rule 57)
    DeklSpezlisteStandard  ->  DeklSpezlisteStandard . DeklSpezifiziererStandard   (rule 62)

    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29

    $default	reduce using rule 57 (DeklSpezifiziererliste)

    DeklSpezifiziererStandard	go to state 76
    StandardTypname	go to state 43



state 40

    DeklSpezlisteStandard  ->  DeklSpezifiziererStandard .   (rule 61)

    $default	reduce using rule 61 (DeklSpezlisteStandard)



state 41

    DeklSpezifiziererliste  ->  DeklSpezZusatzListe . DeklSpezlisteStandard   (rule 58)
    DeklSpezifiziererliste  ->  DeklSpezZusatzListe . DeklSpezlisteCustom   (rule 60)
    DeklSpezZusatzListe  ->  DeklSpezZusatzListe . DeklSpezifiziererZusatz   (rule 66)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 37
    DeklSpezlisteStandard	go to state 77
    DeklSpezifiziererStandard	go to state 40
    DeklSpezifiziererZusatz	go to state 78
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 79
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    FktSpezifizierer	go to state 48
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 42

    DeklSpezZusatzListe  ->  DeklSpezifiziererZusatz .   (rule 65)

    $default	reduce using rule 65 (DeklSpezZusatzListe)



state 43

    DeklSpezifiziererStandard  ->  StandardTypname . DeklSpezZusatzListe   (rule 63)
    DeklSpezifiziererStandard  ->  StandardTypname .   (rule 64)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    $default	reduce using rule 64 (DeklSpezifiziererStandard)

    DeklSpezZusatzListe	go to state 80
    DeklSpezifiziererZusatz	go to state 42
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    FktSpezifizierer	go to state 48



state 44

    DeklSpezifiziererliste  ->  DeklSpezlisteCustom .   (rule 59)

    $default	reduce using rule 59 (DeklSpezifiziererliste)



state 45

    DeklSpezifiziererZusatz  ->  Speicherklassenspezifizierer .   (rule 67)

    $default	reduce using rule 67 (DeklSpezifiziererZusatz)



state 46

    DeklSpezifiziererZusatz  ->  CvQualifizierer .   (rule 69)

    $default	reduce using rule 69 (DeklSpezifiziererZusatz)



state 47

    TemplateArgument  ->  ArgumentDeklaration .   (rule 12)

    $default	reduce using rule 12 (TemplateArgument)



state 48

    DeklSpezifiziererZusatz  ->  FktSpezifizierer .   (rule 68)

    $default	reduce using rule 68 (DeklSpezifiziererZusatz)



state 49

    Klassenname  ->  TemplateKlassenname .   (rule 20)

    $default	reduce using rule 20 (Klassenname)



state 50

    TemplateKlassenname  ->  TemplateName . '<' TemplateArgListe '>'   (rule 192)

    '<' 	shift, and go to state 81



state 51

    Klassenname  ->  Bezeichner .   (rule 19)
    TemplateName  ->  Bezeichner .   (rule 193)

    '<' 	reduce using rule 193 (TemplateName)
    $default	reduce using rule 19 (Klassenname)



state 52

    Deklaration  ->  @2 Klassenspezifizierer ';' .   (rule 6)

    $default	reduce using rule 6 (Deklaration)



state 53

    Klassenspezifizierer  ->  Klassenkopf '{' . Elementliste '}'   (rule 14)

    $default	reduce using rule 23 (Elementliste)

    Elementliste	go to state 82



state 54

    BasisSpez  ->  tDOPPELPUNKT . Basisliste   (rule 47)

    $default	reduce using rule 48 (@5)

    Basisliste	go to state 83
    @5  	go to state 84



state 55

    Klassenkopf  ->  KlassenschluesselKlassenname BasisSpez .   (rule 17)

    $default	reduce using rule 17 (Klassenkopf)



state 56

    KlassenschluesselKlassenname  ->  Klassenschluessel Klassenname .   (rule 18)

    $default	reduce using rule 18 (KlassenschluesselKlassenname)



state 57

    Typargument  ->  tCLASS Bezeichner .   (rule 13)

    $default	reduce using rule 13 (Typargument)



state 58

    TemplateArgumentListe  ->  TemplateArgumentListe tKOMMA . TemplateArgument   (rule 10)

    tCLASS	shift, and go to state 13
    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    TemplateArgument	go to state 85
    Typargument	go to state 35
    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 37
    DeklSpezifiziererliste	go to state 38
    DeklSpezlisteStandard	go to state 39
    DeklSpezifiziererStandard	go to state 40
    DeklSpezZusatzListe	go to state 41
    DeklSpezifiziererZusatz	go to state 42
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 44
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    ArgumentDeklaration	go to state 47
    FktSpezifizierer	go to state 48
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 59

    Deklaration  ->  tTEMPLATE '<' TemplateArgumentListe '>' . @3 Klassenspezifizierer ';'   (rule 8)

    $default	reduce using rule 7 (@3)

    @3  	go to state 86



state 60

    QualifizierterKlassenname  ->  Klassenname tGELTUNGSBEREICHOPERATOR . QualifizierterKlassenname   (rule 46)

    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 87
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 61

    DeklSpezZusatzListe  ->  DeklSpezZusatzListe . DeklSpezifiziererZusatz   (rule 66)
    DeklSpezlisteCustom  ->  QualifizierterKlassenname DeklSpezZusatzListe .   (rule 80)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    $default	reduce using rule 80 (DeklSpezlisteCustom)

    DeklSpezifiziererZusatz	go to state 78
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    FktSpezifizierer	go to state 48



state 62

    Operatorfunktionsname  ->  tOPERATOR . Operator   (rule 145)
    Konversionsfunktionsname  ->  tOPERATOR . Konversionstypname   (rule 187)

    tKOMMA	shift, and go to state 88
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tNEW	shift, and go to state 89
    tDELETE	shift, and go to state 90
    '<' 	shift, and go to state 91
    '>' 	shift, and go to state 92
    '[' 	shift, and go to state 93
    '*' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '=' 	shift, and go to state 96
    '~' 	shift, and go to state 97
    '(' 	shift, and go to state 98
    '!' 	shift, and go to state 99
    '%' 	shift, and go to state 100
    '^' 	shift, and go to state 101
    '-' 	shift, and go to state 102
    '+' 	shift, and go to state 103
    '|' 	shift, and go to state 104
    '/' 	shift, and go to state 105
    ',' 	shift, and go to state 106

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 37
    DeklSpezlisteStandard	go to state 107
    DeklSpezifiziererStandard	go to state 40
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 108
    Operator	go to state 109
    Konversionstypname	go to state 110
    Typspezifizierer	go to state 111
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 63

    Zeigeroperator  ->  '*' . CvQualifiziererliste   (rule 96)

    $default	reduce using rule 98 (CvQualifiziererliste)

    CvQualifiziererliste	go to state 112



state 64

    Zeigeroperator  ->  '&' . CvQualifiziererliste   (rule 97)

    $default	reduce using rule 98 (CvQualifiziererliste)

    CvQualifiziererliste	go to state 113



state 65

    ArgumentDeklaration  ->  DeklSpezifiziererliste '=' . Ausdruck   (rule 110)

    tEXPRESSION	shift, and go to state 114

    Ausdruck	go to state 115



state 66

    Name  ->  QualifizierterName .   (rule 91)

    $default	reduce using rule 91 (Name)



state 67

    Dname  ->  QualifizierterTypname .   (rule 87)

    $default	reduce using rule 87 (Dname)



state 68

    QualifizierterName  ->  QualifizierterKlassenname . tGELTUNGSBEREICHOPERATOR Name   (rule 43)
    QualifizierterTypname  ->  QualifizierterKlassenname .   (rule 44)

    tGELTUNGSBEREICHOPERATOR	shift, and go to state 116

    $default	reduce using rule 44 (QualifizierterTypname)



state 69

    Deklarator  ->  Deklarator . '[' KonstanterAusdruck ']'   (rule 84)
    Deklarator  ->  Deklarator . '[' ']'   (rule 85)
    ArgumentDeklaration  ->  DeklSpezifiziererliste Deklarator .   (rule 108)
    ArgumentDeklaration  ->  DeklSpezifiziererliste Deklarator . '=' Ausdruck   (rule 109)

    '[' 	shift, and go to state 117
    '=' 	shift, and go to state 118

    $default	reduce using rule 108 (ArgumentDeklaration)



state 70

    Deklarator  ->  Dname .   (rule 82)

    $default	reduce using rule 82 (Deklarator)



state 71

    Dname  ->  Name .   (rule 86)

    $default	reduce using rule 86 (Dname)



state 72

    Deklarator  ->  Zeigeroperator . Deklarator   (rule 83)
    ArgumentDeklaration  ->  DeklSpezifiziererliste Zeigeroperator .   (rule 112)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64

    $default	reduce using rule 112 (ArgumentDeklaration)

    Klassenname	go to state 36
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 68
    Deklarator	go to state 119
    Dname	go to state 70
    Name	go to state 71
    Zeigeroperator	go to state 120
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 73

    Name  ->  Operatorfunktionsname .   (rule 89)

    $default	reduce using rule 89 (Name)



state 74

    Name  ->  Konversionsfunktionsname .   (rule 90)

    $default	reduce using rule 90 (Name)



state 75

    Klassenname  ->  Bezeichner .   (rule 19)
    Name  ->  Bezeichner .   (rule 88)
    TemplateName  ->  Bezeichner .   (rule 193)

    tKOMMA	reduce using rule 19 (Klassenname)
    tKOMMA	[reduce using rule 88 (Name)]
    ';' 	reduce using rule 19 (Klassenname)
    ';' 	[reduce using rule 88 (Name)]
    '<' 	reduce using rule 193 (TemplateName)
    '>' 	reduce using rule 19 (Klassenname)
    '>' 	[reduce using rule 88 (Name)]
    '[' 	reduce using rule 19 (Klassenname)
    '[' 	[reduce using rule 88 (Name)]
    '=' 	reduce using rule 19 (Klassenname)
    '=' 	[reduce using rule 88 (Name)]
    '(' 	reduce using rule 19 (Klassenname)
    '(' 	[reduce using rule 88 (Name)]
    ')' 	reduce using rule 19 (Klassenname)
    ')' 	[reduce using rule 88 (Name)]
    $default	reduce using rule 19 (Klassenname)



state 76

    DeklSpezlisteStandard  ->  DeklSpezlisteStandard DeklSpezifiziererStandard .   (rule 62)

    $default	reduce using rule 62 (DeklSpezlisteStandard)



state 77

    DeklSpezifiziererliste  ->  DeklSpezZusatzListe DeklSpezlisteStandard .   (rule 58)
    DeklSpezlisteStandard  ->  DeklSpezlisteStandard . DeklSpezifiziererStandard   (rule 62)

    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29

    $default	reduce using rule 58 (DeklSpezifiziererliste)

    DeklSpezifiziererStandard	go to state 76
    StandardTypname	go to state 43



state 78

    DeklSpezZusatzListe  ->  DeklSpezZusatzListe DeklSpezifiziererZusatz .   (rule 66)

    $default	reduce using rule 66 (DeklSpezZusatzListe)



state 79

    DeklSpezifiziererliste  ->  DeklSpezZusatzListe DeklSpezlisteCustom .   (rule 60)

    $default	reduce using rule 60 (DeklSpezifiziererliste)



state 80

    DeklSpezifiziererStandard  ->  StandardTypname DeklSpezZusatzListe .   (rule 63)
    DeklSpezZusatzListe  ->  DeklSpezZusatzListe . DeklSpezifiziererZusatz   (rule 66)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    $default	reduce using rule 63 (DeklSpezifiziererStandard)

    DeklSpezifiziererZusatz	go to state 78
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    FktSpezifizierer	go to state 48



state 81

    TemplateKlassenname  ->  TemplateName '<' . TemplateArgListe '>'   (rule 192)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 37
    DeklSpezlisteStandard	go to state 107
    DeklSpezifiziererStandard	go to state 40
    DeklSpezZusatzListe	go to state 121
    DeklSpezifiziererZusatz	go to state 42
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 108
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    FktSpezifizierer	go to state 48
    Typspezifizierer	go to state 122
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    TemplateArgListe	go to state 123
    TemplateArg	go to state 124
    Typname	go to state 125
    Bezeichner	go to state 51



state 82

    Klassenspezifizierer  ->  Klassenkopf '{' Elementliste . '}'   (rule 14)
    Elementliste  ->  Elementliste . Element   (rule 24)

    tUNION	shift, and go to state 126
    tPRIVATE	shift, and go to state 127
    tPUBLIC	shift, and go to state 128
    tPROTECTED	shift, and go to state 129
    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tOPERATOR	shift, and go to state 62
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 130
    tENUM	shift, and go to state 131
    tVOLATILE	shift, and go to state 19
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32
    ';' 	shift, and go to state 132
    '}' 	shift, and go to state 133
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '(' 	shift, and go to state 134

    '~' 	[reduce using rule 119 (FktSpezifiziererOpt)]
    $default	reduce using rule 32 (@4)

    Klassenname	go to state 36
    Element	go to state 135
    Elementdeklaration	go to state 136
    @4  	go to state 137
    ElementDeklaratorliste	go to state 138
    ElementDeklarator	go to state 139
    Zugriffsspezifizierer	go to state 140
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 141
    DeklSpezifiziererliste	go to state 142
    DeklSpezlisteStandard	go to state 39
    DeklSpezifiziererStandard	go to state 40
    DeklSpezZusatzListe	go to state 41
    DeklSpezifiziererZusatz	go to state 42
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 44
    Deklarator	go to state 143
    Dname	go to state 144
    Name	go to state 71
    Speicherklassenspezifizierer	go to state 45
    Zeigeroperator	go to state 145
    CvQualifizierer	go to state 46
    Funktionsdefinition	go to state 146
    FktSpezifiziererOpt	go to state 147
    FktSpezifizierer	go to state 148
    Destruktor	go to state 149
    FktDeklarator	go to state 150
    FktDeklaratorName	go to state 151
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    EnumSpezifizierer	go to state 152
    Bezeichner	go to state 75



state 83

    BasisSpez  ->  tDOPPELPUNKT Basisliste .   (rule 47)
    Basisliste  ->  Basisliste . tKOMMA @6 Basisspezifizierer   (rule 51)

    tKOMMA	shift, and go to state 153

    $default	reduce using rule 47 (BasisSpez)



state 84

    Basisliste  ->  @5 . Basisspezifizierer   (rule 49)

    tPRIVATE	shift, and go to state 127
    tPUBLIC	shift, and go to state 128
    tPROTECTED	shift, and go to state 129
    tVIRTUAL	shift, and go to state 154
    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    Zugriffsspezifizierer	go to state 155
    QualifizierterKlassenname	go to state 156
    Basisspezifizierer	go to state 157
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 85

    TemplateArgumentListe  ->  TemplateArgumentListe tKOMMA TemplateArgument .   (rule 10)

    $default	reduce using rule 10 (TemplateArgumentListe)



state 86

    Deklaration  ->  tTEMPLATE '<' TemplateArgumentListe '>' @3 . Klassenspezifizierer ';'   (rule 8)

    tCLASS	shift, and go to state 7
    tSTRUCT	shift, and go to state 8

    Klassenspezifizierer	go to state 158
    Klassenkopf	go to state 10
    KlassenschluesselKlassenname	go to state 11
    Klassenschluessel	go to state 12



state 87

    QualifizierterKlassenname  ->  Klassenname tGELTUNGSBEREICHOPERATOR QualifizierterKlassenname .   (rule 46)

    $default	reduce using rule 46 (QualifizierterKlassenname)



state 88

    Operator  ->  tKOMMA .   (rule 148)

    $default	reduce using rule 148 (Operator)



state 89

    Operator  ->  tNEW .   (rule 146)

    $default	reduce using rule 146 (Operator)



state 90

    Operator  ->  tDELETE .   (rule 147)

    $default	reduce using rule 147 (Operator)



state 91

    Operator  ->  '<' .   (rule 161)
    Operator  ->  '<' . '<'   (rule 169)
    Operator  ->  '<' . '='   (rule 171)
    Operator  ->  '<' . '<' '='   (rule 182)

    '<' 	shift, and go to state 159
    '=' 	shift, and go to state 160

    '=' 	[reduce using rule 161 (Operator)]
    $default	reduce using rule 161 (Operator)



state 92

    Operator  ->  '>' .   (rule 162)
    Operator  ->  '>' . '>'   (rule 170)
    Operator  ->  '>' . '='   (rule 172)
    Operator  ->  '>' . '>' '='   (rule 183)

    '>' 	shift, and go to state 161
    '=' 	shift, and go to state 162

    '>' 	[reduce using rule 162 (Operator)]
    '=' 	[reduce using rule 162 (Operator)]
    $default	reduce using rule 162 (Operator)



state 93

    Operator  ->  '[' . ']'   (rule 160)

    ']' 	shift, and go to state 163



state 94

    Operator  ->  '*' .   (rule 153)
    Operator  ->  '*' . '='   (rule 177)

    '=' 	shift, and go to state 164

    '=' 	[reduce using rule 153 (Operator)]
    $default	reduce using rule 153 (Operator)



state 95

    Operator  ->  '&' .   (rule 152)
    Operator  ->  '&' . '&'   (rule 175)
    Operator  ->  '&' . '='   (rule 184)

    '&' 	shift, and go to state 165
    '=' 	shift, and go to state 166

    '=' 	[reduce using rule 152 (Operator)]
    $default	reduce using rule 152 (Operator)



state 96

    Operator  ->  '=' .   (rule 157)
    Operator  ->  '=' . '='   (rule 173)

    '=' 	shift, and go to state 167

    '=' 	[reduce using rule 157 (Operator)]
    $default	reduce using rule 157 (Operator)



state 97

    Operator  ->  '~' .   (rule 159)

    $default	reduce using rule 159 (Operator)



state 98

    Operator  ->  '(' . ')'   (rule 154)

    ')' 	shift, and go to state 168



state 99

    Operator  ->  '!' .   (rule 149)
    Operator  ->  '!' . '='   (rule 174)

    '=' 	shift, and go to state 169

    '=' 	[reduce using rule 149 (Operator)]
    $default	reduce using rule 149 (Operator)



state 100

    Operator  ->  '%' .   (rule 150)
    Operator  ->  '%' . '='   (rule 179)

    '=' 	shift, and go to state 170

    '=' 	[reduce using rule 150 (Operator)]
    $default	reduce using rule 150 (Operator)



state 101

    Operator  ->  '^' .   (rule 151)
    Operator  ->  '^' . '='   (rule 185)

    '=' 	shift, and go to state 171

    '=' 	[reduce using rule 151 (Operator)]
    $default	reduce using rule 151 (Operator)



state 102

    Operator  ->  '-' .   (rule 155)
    Operator  ->  '-' . '>'   (rule 165)
    Operator  ->  '-' . '-'   (rule 167)
    Operator  ->  '-' . '>' '*'   (rule 168)
    Operator  ->  '-' . '='   (rule 181)

    '>' 	shift, and go to state 172
    '=' 	shift, and go to state 173
    '-' 	shift, and go to state 174

    '>' 	[reduce using rule 155 (Operator)]
    '=' 	[reduce using rule 155 (Operator)]
    $default	reduce using rule 155 (Operator)



state 103

    Operator  ->  '+' .   (rule 156)
    Operator  ->  '+' . '+'   (rule 166)
    Operator  ->  '+' . '='   (rule 180)

    '=' 	shift, and go to state 175
    '+' 	shift, and go to state 176

    '=' 	[reduce using rule 156 (Operator)]
    $default	reduce using rule 156 (Operator)



state 104

    Operator  ->  '|' .   (rule 158)
    Operator  ->  '|' . '|'   (rule 176)
    Operator  ->  '|' . '='   (rule 186)

    '=' 	shift, and go to state 177
    '|' 	shift, and go to state 178

    '=' 	[reduce using rule 158 (Operator)]
    $default	reduce using rule 158 (Operator)



state 105

    Operator  ->  '/' .   (rule 163)
    Operator  ->  '/' . '='   (rule 178)

    '=' 	shift, and go to state 179

    '=' 	[reduce using rule 163 (Operator)]
    $default	reduce using rule 163 (Operator)



state 106

    Operator  ->  ',' .   (rule 164)

    $default	reduce using rule 164 (Operator)



state 107

    DeklSpezlisteStandard  ->  DeklSpezlisteStandard . DeklSpezifiziererStandard   (rule 62)
    Typspezifizierer  ->  DeklSpezlisteStandard .   (rule 190)

    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29

    $default	reduce using rule 190 (Typspezifizierer)

    DeklSpezifiziererStandard	go to state 76
    StandardTypname	go to state 43



state 108

    Typspezifizierer  ->  DeklSpezlisteCustom .   (rule 191)

    $default	reduce using rule 191 (Typspezifizierer)



state 109

    Operatorfunktionsname  ->  tOPERATOR Operator .   (rule 145)

    $default	reduce using rule 145 (Operatorfunktionsname)



state 110

    Konversionsfunktionsname  ->  tOPERATOR Konversionstypname .   (rule 187)

    $default	reduce using rule 187 (Konversionsfunktionsname)



state 111

    Konversionstypname  ->  Typspezifizierer .   (rule 188)
    Konversionstypname  ->  Typspezifizierer . Zeigeroperator   (rule 189)

    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64

    $default	reduce using rule 188 (Konversionstypname)

    Zeigeroperator	go to state 180



state 112

    Zeigeroperator  ->  '*' CvQualifiziererliste .   (rule 96)
    CvQualifiziererliste  ->  CvQualifiziererliste . CvQualifizierer   (rule 99)

    tCONST	shift, and go to state 16
    tVOLATILE	shift, and go to state 19

    $default	reduce using rule 96 (Zeigeroperator)

    CvQualifizierer	go to state 181



state 113

    Zeigeroperator  ->  '&' CvQualifiziererliste .   (rule 97)
    CvQualifiziererliste  ->  CvQualifiziererliste . CvQualifizierer   (rule 99)

    tCONST	shift, and go to state 16
    tVOLATILE	shift, and go to state 19

    $default	reduce using rule 97 (Zeigeroperator)

    CvQualifizierer	go to state 181



state 114

    Ausdruck  ->  tEXPRESSION .   (rule 211)

    $default	reduce using rule 211 (Ausdruck)



state 115

    ArgumentDeklaration  ->  DeklSpezifiziererliste '=' Ausdruck .   (rule 110)

    $default	reduce using rule 110 (ArgumentDeklaration)



state 116

    QualifizierterName  ->  QualifizierterKlassenname tGELTUNGSBEREICHOPERATOR . Name   (rule 43)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    QualifizierterName	go to state 66
    QualifizierterKlassenname	go to state 182
    Name	go to state 183
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 117

    Deklarator  ->  Deklarator '[' . KonstanterAusdruck ']'   (rule 84)
    Deklarator  ->  Deklarator '[' . ']'   (rule 85)

    tCONSTEXPR	shift, and go to state 184
    ']' 	shift, and go to state 185

    KonstanterAusdruck	go to state 186



state 118

    ArgumentDeklaration  ->  DeklSpezifiziererliste Deklarator '=' . Ausdruck   (rule 109)

    tEXPRESSION	shift, and go to state 114

    Ausdruck	go to state 187



state 119

    Deklarator  ->  Zeigeroperator Deklarator .   (rule 83)
    Deklarator  ->  Deklarator . '[' KonstanterAusdruck ']'   (rule 84)
    Deklarator  ->  Deklarator . '[' ']'   (rule 85)

    '[' 	shift, and go to state 117

    '[' 	[reduce using rule 83 (Deklarator)]
    $default	reduce using rule 83 (Deklarator)



state 120

    Deklarator  ->  Zeigeroperator . Deklarator   (rule 83)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64

    Klassenname	go to state 36
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 68
    Deklarator	go to state 119
    Dname	go to state 70
    Name	go to state 71
    Zeigeroperator	go to state 120
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 121

    DeklSpezZusatzListe  ->  DeklSpezZusatzListe . DeklSpezifiziererZusatz   (rule 66)
    Typname  ->  DeklSpezZusatzListe . Typspezifizierer AbstrakterDeklaratorOpt   (rule 198)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 37
    DeklSpezlisteStandard	go to state 107
    DeklSpezifiziererStandard	go to state 40
    DeklSpezifiziererZusatz	go to state 78
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 108
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    FktSpezifizierer	go to state 48
    Typspezifizierer	go to state 188
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 122

    Typname  ->  Typspezifizierer . AbstrakterDeklaratorOpt   (rule 197)

    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '(' 	shift, and go to state 189

    '(' 	[reduce using rule 203 (AbstrakterDeklaratorOpt)]
    $default	reduce using rule 203 (AbstrakterDeklaratorOpt)

    Zeigeroperator	go to state 190
    AbstrakterDeklarator	go to state 191
    AbstrakterDeklaratorOpt	go to state 192



state 123

    TemplateKlassenname  ->  TemplateName '<' TemplateArgListe . '>'   (rule 192)
    TemplateArgListe  ->  TemplateArgListe . tKOMMA TemplateArg   (rule 195)

    tKOMMA	shift, and go to state 193
    '>' 	shift, and go to state 194



state 124

    TemplateArgListe  ->  TemplateArg .   (rule 194)

    $default	reduce using rule 194 (TemplateArgListe)



state 125

    TemplateArg  ->  Typname .   (rule 196)

    $default	reduce using rule 196 (TemplateArg)



state 126

    Elementdeklaration  ->  tUNION . '{' '}'   (rule 36)

    '{' 	shift, and go to state 195



state 127

    Zugriffsspezifizierer  ->  tPRIVATE .   (rule 40)

    $default	reduce using rule 40 (Zugriffsspezifizierer)



state 128

    Zugriffsspezifizierer  ->  tPUBLIC .   (rule 41)

    $default	reduce using rule 41 (Zugriffsspezifizierer)



state 129

    Zugriffsspezifizierer  ->  tPROTECTED .   (rule 42)

    $default	reduce using rule 42 (Zugriffsspezifizierer)



state 130

    Elementdeklaration  ->  tFRIEND . Klassenschluessel Klassenname   (rule 34)
    DeklSpezifiziererZusatz  ->  tFRIEND .   (rule 70)

    tCLASS	shift, and go to state 7
    tSTRUCT	shift, and go to state 8

    $default	reduce using rule 70 (DeklSpezifiziererZusatz)

    Klassenschluessel	go to state 196



state 131

    EnumSpezifizierer  ->  tENUM . Bezeichner '{' '}'   (rule 207)
    EnumSpezifizierer  ->  tENUM . '{' '}'   (rule 208)

    tIDENTIFIER	shift, and go to state 20
    '{' 	shift, and go to state 197

    Bezeichner	go to state 198



state 132

    Elementdeklaration  ->  ';' .   (rule 29)

    $default	reduce using rule 29 (Elementdeklaration)



state 133

    Klassenspezifizierer  ->  Klassenkopf '{' Elementliste '}' .   (rule 14)

    $default	reduce using rule 14 (Klassenspezifizierer)



state 134

    FktDeklaratorName  ->  '(' . Dname ')'   (rule 134)
    FktDeklaratorName  ->  '(' . Zeigeroperator FktDeklaratorName ')'   (rule 135)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64

    Klassenname	go to state 36
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 68
    Dname	go to state 199
    Name	go to state 71
    Zeigeroperator	go to state 200
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 135

    Elementliste  ->  Elementliste Element .   (rule 24)

    $default	reduce using rule 24 (Elementliste)



state 136

    Element  ->  Elementdeklaration .   (rule 25)

    $default	reduce using rule 25 (Element)



state 137

    Elementdeklaration  ->  @4 . Klassenspezifizierer   (rule 33)

    tCLASS	shift, and go to state 7
    tSTRUCT	shift, and go to state 8

    Klassenspezifizierer	go to state 201
    Klassenkopf	go to state 10
    KlassenschluesselKlassenname	go to state 11
    Klassenschluessel	go to state 12



state 138

    Elementdeklaration  ->  ElementDeklaratorliste . ';'   (rule 30)
    ElementDeklaratorliste  ->  ElementDeklaratorliste . tKOMMA ElementDeklarator   (rule 38)

    tKOMMA	shift, and go to state 202
    ';' 	shift, and go to state 203



state 139

    ElementDeklaratorliste  ->  ElementDeklarator .   (rule 37)

    $default	reduce using rule 37 (ElementDeklaratorliste)



state 140

    Element  ->  Zugriffsspezifizierer . tDOPPELPUNKT   (rule 26)

    tDOPPELPUNKT	shift, and go to state 204



state 141

    QualifizierterName  ->  QualifizierterKlassenname . tGELTUNGSBEREICHOPERATOR Name   (rule 43)
    QualifizierterTypname  ->  QualifizierterKlassenname .   (rule 44)
    DeklSpezlisteCustom  ->  QualifizierterKlassenname . DeklSpezZusatzListe   (rule 80)
    DeklSpezlisteCustom  ->  QualifizierterKlassenname .   (rule 81)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tGELTUNGSBEREICHOPERATOR	shift, and go to state 116
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    tOPERATOR	reduce using rule 81 (DeklSpezlisteCustom)
    tIDENTIFIER	reduce using rule 81 (DeklSpezlisteCustom)
    ';' 	[reduce using rule 44 (QualifizierterTypname)]
    ';' 	[reduce using rule 81 (DeklSpezlisteCustom)]
    '*' 	[reduce using rule 81 (DeklSpezlisteCustom)]
    '&' 	[reduce using rule 81 (DeklSpezlisteCustom)]
    '(' 	[reduce using rule 44 (QualifizierterTypname)]
    '(' 	[reduce using rule 81 (DeklSpezlisteCustom)]
    $default	reduce using rule 44 (QualifizierterTypname)

    DeklSpezZusatzListe	go to state 61
    DeklSpezifiziererZusatz	go to state 42
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    FktSpezifizierer	go to state 48



state 142

    Elementdeklaration  ->  DeklSpezifiziererliste . ElementDeklaratorliste ';'   (rule 27)
    Elementdeklaration  ->  DeklSpezifiziererliste . ';'   (rule 28)
    Funktionsdefinition  ->  DeklSpezifiziererliste . FktDeklarator KtorInitialisiererOpt FktRumpf   (rule 113)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20
    ';' 	shift, and go to state 205
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '(' 	shift, and go to state 134

    Klassenname	go to state 36
    ElementDeklaratorliste	go to state 206
    ElementDeklarator	go to state 139
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 68
    Deklarator	go to state 143
    Dname	go to state 144
    Name	go to state 71
    Zeigeroperator	go to state 145
    FktDeklarator	go to state 207
    FktDeklaratorName	go to state 151
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 143

    ElementDeklarator  ->  Deklarator .   (rule 39)
    Deklarator  ->  Deklarator . '[' KonstanterAusdruck ']'   (rule 84)
    Deklarator  ->  Deklarator . '[' ']'   (rule 85)

    '[' 	shift, and go to state 117

    $default	reduce using rule 39 (ElementDeklarator)



state 144

    Deklarator  ->  Dname .   (rule 82)
    FktDeklaratorName  ->  Dname .   (rule 132)

    '(' 	reduce using rule 132 (FktDeklaratorName)
    $default	reduce using rule 82 (Deklarator)



state 145

    Deklarator  ->  Zeigeroperator . Deklarator   (rule 83)
    FktDeklaratorName  ->  Zeigeroperator . FktDeklaratorName   (rule 133)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '(' 	shift, and go to state 134

    Klassenname	go to state 36
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 68
    Deklarator	go to state 119
    Dname	go to state 144
    Name	go to state 71
    Zeigeroperator	go to state 145
    FktDeklaratorName	go to state 208
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 146

    Elementdeklaration  ->  Funktionsdefinition .   (rule 31)

    $default	reduce using rule 31 (Elementdeklaration)



state 147

    Destruktor  ->  FktSpezifiziererOpt . '~' Bezeichner @9 '(' VoidOpt ')' FktRumpf   (rule 124)

    '~' 	shift, and go to state 209



state 148

    DeklSpezifiziererZusatz  ->  FktSpezifizierer .   (rule 68)
    FktSpezifiziererOpt  ->  FktSpezifizierer .   (rule 120)

    '~' 	reduce using rule 120 (FktSpezifiziererOpt)
    $default	reduce using rule 68 (DeklSpezifiziererZusatz)



state 149

    Funktionsdefinition  ->  Destruktor .   (rule 115)

    $default	reduce using rule 115 (Funktionsdefinition)



state 150

    Funktionsdefinition  ->  FktDeklarator . KtorInitialisiererOpt FktRumpf   (rule 114)

    tDOPPELPUNKT	shift, and go to state 210

    $default	reduce using rule 127 (KtorInitialisiererOpt)

    KtorInitialisiererOpt	go to state 211
    KtorInitialisierer	go to state 212



state 151

    FktDeklarator  ->  FktDeklaratorName . @10 '(' Argumentliste ')' CvQualifiziererliste   (rule 131)

    $default	reduce using rule 130 (@10)

    @10 	go to state 213



state 152

    Elementdeklaration  ->  EnumSpezifizierer .   (rule 35)

    $default	reduce using rule 35 (Elementdeklaration)



state 153

    Basisliste  ->  Basisliste tKOMMA . @6 Basisspezifizierer   (rule 51)

    $default	reduce using rule 50 (@6)

    @6  	go to state 214



state 154

    Basisspezifizierer  ->  tVIRTUAL . QualifizierterKlassenname   (rule 54)
    Basisspezifizierer  ->  tVIRTUAL . Zugriffsspezifizierer QualifizierterKlassenname   (rule 55)

    tPRIVATE	shift, and go to state 127
    tPUBLIC	shift, and go to state 128
    tPROTECTED	shift, and go to state 129
    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    Zugriffsspezifizierer	go to state 215
    QualifizierterKlassenname	go to state 216
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 155

    Basisspezifizierer  ->  Zugriffsspezifizierer . QualifizierterKlassenname   (rule 53)
    Basisspezifizierer  ->  Zugriffsspezifizierer . tVIRTUAL QualifizierterKlassenname   (rule 56)

    tVIRTUAL	shift, and go to state 217
    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 218
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 156

    Basisspezifizierer  ->  QualifizierterKlassenname .   (rule 52)

    $default	reduce using rule 52 (Basisspezifizierer)



state 157

    Basisliste  ->  @5 Basisspezifizierer .   (rule 49)

    $default	reduce using rule 49 (Basisliste)



state 158

    Deklaration  ->  tTEMPLATE '<' TemplateArgumentListe '>' @3 Klassenspezifizierer . ';'   (rule 8)

    ';' 	shift, and go to state 219



state 159

    Operator  ->  '<' '<' .   (rule 169)
    Operator  ->  '<' '<' . '='   (rule 182)

    '=' 	shift, and go to state 220

    '=' 	[reduce using rule 169 (Operator)]
    $default	reduce using rule 169 (Operator)



state 160

    Operator  ->  '<' '=' .   (rule 171)

    $default	reduce using rule 171 (Operator)



state 161

    Operator  ->  '>' '>' .   (rule 170)
    Operator  ->  '>' '>' . '='   (rule 183)

    '=' 	shift, and go to state 221

    '=' 	[reduce using rule 170 (Operator)]
    $default	reduce using rule 170 (Operator)



state 162

    Operator  ->  '>' '=' .   (rule 172)

    $default	reduce using rule 172 (Operator)



state 163

    Operator  ->  '[' ']' .   (rule 160)

    $default	reduce using rule 160 (Operator)



state 164

    Operator  ->  '*' '=' .   (rule 177)

    $default	reduce using rule 177 (Operator)



state 165

    Operator  ->  '&' '&' .   (rule 175)

    $default	reduce using rule 175 (Operator)



state 166

    Operator  ->  '&' '=' .   (rule 184)

    $default	reduce using rule 184 (Operator)



state 167

    Operator  ->  '=' '=' .   (rule 173)

    $default	reduce using rule 173 (Operator)



state 168

    Operator  ->  '(' ')' .   (rule 154)

    $default	reduce using rule 154 (Operator)



state 169

    Operator  ->  '!' '=' .   (rule 174)

    $default	reduce using rule 174 (Operator)



state 170

    Operator  ->  '%' '=' .   (rule 179)

    $default	reduce using rule 179 (Operator)



state 171

    Operator  ->  '^' '=' .   (rule 185)

    $default	reduce using rule 185 (Operator)



state 172

    Operator  ->  '-' '>' .   (rule 165)
    Operator  ->  '-' '>' . '*'   (rule 168)

    '*' 	shift, and go to state 222

    $default	reduce using rule 165 (Operator)



state 173

    Operator  ->  '-' '=' .   (rule 181)

    $default	reduce using rule 181 (Operator)



state 174

    Operator  ->  '-' '-' .   (rule 167)

    $default	reduce using rule 167 (Operator)



state 175

    Operator  ->  '+' '=' .   (rule 180)

    $default	reduce using rule 180 (Operator)



state 176

    Operator  ->  '+' '+' .   (rule 166)

    $default	reduce using rule 166 (Operator)



state 177

    Operator  ->  '|' '=' .   (rule 186)

    $default	reduce using rule 186 (Operator)



state 178

    Operator  ->  '|' '|' .   (rule 176)

    $default	reduce using rule 176 (Operator)



state 179

    Operator  ->  '/' '=' .   (rule 178)

    $default	reduce using rule 178 (Operator)



state 180

    Konversionstypname  ->  Typspezifizierer Zeigeroperator .   (rule 189)

    $default	reduce using rule 189 (Konversionstypname)



state 181

    CvQualifiziererliste  ->  CvQualifiziererliste CvQualifizierer .   (rule 99)

    $default	reduce using rule 99 (CvQualifiziererliste)



state 182

    QualifizierterName  ->  QualifizierterKlassenname . tGELTUNGSBEREICHOPERATOR Name   (rule 43)

    tGELTUNGSBEREICHOPERATOR	shift, and go to state 116



state 183

    QualifizierterName  ->  QualifizierterKlassenname tGELTUNGSBEREICHOPERATOR Name .   (rule 43)

    $default	reduce using rule 43 (QualifizierterName)



state 184

    KonstanterAusdruck  ->  tCONSTEXPR .   (rule 210)

    $default	reduce using rule 210 (KonstanterAusdruck)



state 185

    Deklarator  ->  Deklarator '[' ']' .   (rule 85)

    $default	reduce using rule 85 (Deklarator)



state 186

    Deklarator  ->  Deklarator '[' KonstanterAusdruck . ']'   (rule 84)

    ']' 	shift, and go to state 223



state 187

    ArgumentDeklaration  ->  DeklSpezifiziererliste Deklarator '=' Ausdruck .   (rule 109)

    $default	reduce using rule 109 (ArgumentDeklaration)



state 188

    Typname  ->  DeklSpezZusatzListe Typspezifizierer . AbstrakterDeklaratorOpt   (rule 198)

    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '(' 	shift, and go to state 189

    '(' 	[reduce using rule 203 (AbstrakterDeklaratorOpt)]
    $default	reduce using rule 203 (AbstrakterDeklaratorOpt)

    Zeigeroperator	go to state 190
    AbstrakterDeklarator	go to state 191
    AbstrakterDeklaratorOpt	go to state 224



state 189

    AbstrakterDeklarator  ->  '(' . AbstrakterDeklarator ')'   (rule 202)

    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '(' 	shift, and go to state 189

    '(' 	[reduce using rule 203 (AbstrakterDeklaratorOpt)]
    $default	reduce using rule 203 (AbstrakterDeklaratorOpt)

    Zeigeroperator	go to state 190
    AbstrakterDeklarator	go to state 225
    AbstrakterDeklaratorOpt	go to state 226



state 190

    AbstrakterDeklarator  ->  Zeigeroperator . AbstrakterDeklaratorOpt   (rule 199)

    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '(' 	shift, and go to state 189

    '(' 	[reduce using rule 203 (AbstrakterDeklaratorOpt)]
    $default	reduce using rule 203 (AbstrakterDeklaratorOpt)

    Zeigeroperator	go to state 190
    AbstrakterDeklarator	go to state 191
    AbstrakterDeklaratorOpt	go to state 227



state 191

    AbstrakterDeklaratorOpt  ->  AbstrakterDeklarator .   (rule 204)

    $default	reduce using rule 204 (AbstrakterDeklaratorOpt)



state 192

    Typname  ->  Typspezifizierer AbstrakterDeklaratorOpt .   (rule 197)
    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt . '(' Argumentliste ')' CvQualifiziererliste   (rule 200)
    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt . '[' KonstanterAusdruckOpt ']'   (rule 201)

    '[' 	shift, and go to state 228
    '(' 	shift, and go to state 229

    $default	reduce using rule 197 (Typname)



state 193

    TemplateArgListe  ->  TemplateArgListe tKOMMA . TemplateArg   (rule 195)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 37
    DeklSpezlisteStandard	go to state 107
    DeklSpezifiziererStandard	go to state 40
    DeklSpezZusatzListe	go to state 121
    DeklSpezifiziererZusatz	go to state 42
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 108
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    FktSpezifizierer	go to state 48
    Typspezifizierer	go to state 122
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    TemplateArg	go to state 230
    Typname	go to state 125
    Bezeichner	go to state 51



state 194

    TemplateKlassenname  ->  TemplateName '<' TemplateArgListe '>' .   (rule 192)

    $default	reduce using rule 192 (TemplateKlassenname)



state 195

    Elementdeklaration  ->  tUNION '{' . '}'   (rule 36)

    '}' 	shift, and go to state 231



state 196

    Elementdeklaration  ->  tFRIEND Klassenschluessel . Klassenname   (rule 34)

    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 232
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 197

    EnumSpezifizierer  ->  tENUM '{' . '}'   (rule 208)

    '}' 	shift, and go to state 233



state 198

    EnumSpezifizierer  ->  tENUM Bezeichner . '{' '}'   (rule 207)

    '{' 	shift, and go to state 234



state 199

    FktDeklaratorName  ->  '(' Dname . ')'   (rule 134)

    ')' 	shift, and go to state 235



state 200

    FktDeklaratorName  ->  '(' Zeigeroperator . FktDeklaratorName ')'   (rule 135)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '(' 	shift, and go to state 134

    Klassenname	go to state 36
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 68
    Dname	go to state 236
    Name	go to state 71
    Zeigeroperator	go to state 237
    FktDeklaratorName	go to state 238
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 201

    Elementdeklaration  ->  @4 Klassenspezifizierer .   (rule 33)

    $default	reduce using rule 33 (Elementdeklaration)



state 202

    ElementDeklaratorliste  ->  ElementDeklaratorliste tKOMMA . ElementDeklarator   (rule 38)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64

    Klassenname	go to state 36
    ElementDeklarator	go to state 239
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 68
    Deklarator	go to state 143
    Dname	go to state 70
    Name	go to state 71
    Zeigeroperator	go to state 120
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 203

    Elementdeklaration  ->  ElementDeklaratorliste ';' .   (rule 30)

    $default	reduce using rule 30 (Elementdeklaration)



state 204

    Element  ->  Zugriffsspezifizierer tDOPPELPUNKT .   (rule 26)

    $default	reduce using rule 26 (Element)



state 205

    Elementdeklaration  ->  DeklSpezifiziererliste ';' .   (rule 28)

    $default	reduce using rule 28 (Elementdeklaration)



state 206

    Elementdeklaration  ->  DeklSpezifiziererliste ElementDeklaratorliste . ';'   (rule 27)
    ElementDeklaratorliste  ->  ElementDeklaratorliste . tKOMMA ElementDeklarator   (rule 38)

    tKOMMA	shift, and go to state 202
    ';' 	shift, and go to state 240



state 207

    Funktionsdefinition  ->  DeklSpezifiziererliste FktDeklarator . KtorInitialisiererOpt FktRumpf   (rule 113)

    tDOPPELPUNKT	shift, and go to state 210

    $default	reduce using rule 127 (KtorInitialisiererOpt)

    KtorInitialisiererOpt	go to state 241
    KtorInitialisierer	go to state 212



state 208

    FktDeklaratorName  ->  Zeigeroperator FktDeklaratorName .   (rule 133)

    $default	reduce using rule 133 (FktDeklaratorName)



state 209

    Destruktor  ->  FktSpezifiziererOpt '~' . Bezeichner @9 '(' VoidOpt ')' FktRumpf   (rule 124)

    tIDENTIFIER	shift, and go to state 20

    Bezeichner	go to state 242



state 210

    KtorInitialisierer  ->  tDOPPELPUNKT . ElementInitialisiererliste   (rule 129)

    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 243
    ElementInitialisiererliste	go to state 244
    ElementInitialisierer	go to state 245
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 211

    Funktionsdefinition  ->  FktDeklarator KtorInitialisiererOpt . FktRumpf   (rule 114)

    tPUREVIRTUAL	shift, and go to state 246
    ';' 	shift, and go to state 247
    '{' 	shift, and go to state 248

    FktRumpf	go to state 249



state 212

    KtorInitialisiererOpt  ->  KtorInitialisierer .   (rule 128)

    $default	reduce using rule 128 (KtorInitialisiererOpt)



state 213

    FktDeklarator  ->  FktDeklaratorName @10 . '(' Argumentliste ')' CvQualifiziererliste   (rule 131)

    '(' 	shift, and go to state 250



state 214

    Basisliste  ->  Basisliste tKOMMA @6 . Basisspezifizierer   (rule 51)

    tPRIVATE	shift, and go to state 127
    tPUBLIC	shift, and go to state 128
    tPROTECTED	shift, and go to state 129
    tVIRTUAL	shift, and go to state 154
    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    Zugriffsspezifizierer	go to state 155
    QualifizierterKlassenname	go to state 156
    Basisspezifizierer	go to state 251
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 215

    Basisspezifizierer  ->  tVIRTUAL Zugriffsspezifizierer . QualifizierterKlassenname   (rule 55)

    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 252
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 216

    Basisspezifizierer  ->  tVIRTUAL QualifizierterKlassenname .   (rule 54)

    $default	reduce using rule 54 (Basisspezifizierer)



state 217

    Basisspezifizierer  ->  Zugriffsspezifizierer tVIRTUAL . QualifizierterKlassenname   (rule 56)

    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 253
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 218

    Basisspezifizierer  ->  Zugriffsspezifizierer QualifizierterKlassenname .   (rule 53)

    $default	reduce using rule 53 (Basisspezifizierer)



state 219

    Deklaration  ->  tTEMPLATE '<' TemplateArgumentListe '>' @3 Klassenspezifizierer ';' .   (rule 8)

    $default	reduce using rule 8 (Deklaration)



state 220

    Operator  ->  '<' '<' '=' .   (rule 182)

    $default	reduce using rule 182 (Operator)



state 221

    Operator  ->  '>' '>' '=' .   (rule 183)

    $default	reduce using rule 183 (Operator)



state 222

    Operator  ->  '-' '>' '*' .   (rule 168)

    $default	reduce using rule 168 (Operator)



state 223

    Deklarator  ->  Deklarator '[' KonstanterAusdruck ']' .   (rule 84)

    $default	reduce using rule 84 (Deklarator)



state 224

    Typname  ->  DeklSpezZusatzListe Typspezifizierer AbstrakterDeklaratorOpt .   (rule 198)
    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt . '(' Argumentliste ')' CvQualifiziererliste   (rule 200)
    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt . '[' KonstanterAusdruckOpt ']'   (rule 201)

    '[' 	shift, and go to state 228
    '(' 	shift, and go to state 229

    $default	reduce using rule 198 (Typname)



state 225

    AbstrakterDeklarator  ->  '(' AbstrakterDeklarator . ')'   (rule 202)
    AbstrakterDeklaratorOpt  ->  AbstrakterDeklarator .   (rule 204)

    ')' 	shift, and go to state 254

    $default	reduce using rule 204 (AbstrakterDeklaratorOpt)



state 226

    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt . '(' Argumentliste ')' CvQualifiziererliste   (rule 200)
    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt . '[' KonstanterAusdruckOpt ']'   (rule 201)

    '[' 	shift, and go to state 228
    '(' 	shift, and go to state 229



state 227

    AbstrakterDeklarator  ->  Zeigeroperator AbstrakterDeklaratorOpt .   (rule 199)
    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt . '(' Argumentliste ')' CvQualifiziererliste   (rule 200)
    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt . '[' KonstanterAusdruckOpt ']'   (rule 201)

    '[' 	shift, and go to state 228
    '(' 	shift, and go to state 229

    '[' 	[reduce using rule 199 (AbstrakterDeklarator)]
    '(' 	[reduce using rule 199 (AbstrakterDeklarator)]
    $default	reduce using rule 199 (AbstrakterDeklarator)



state 228

    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt '[' . KonstanterAusdruckOpt ']'   (rule 201)

    tCONSTEXPR	shift, and go to state 184

    $default	reduce using rule 205 (KonstanterAusdruckOpt)

    KonstanterAusdruckOpt	go to state 255
    KonstanterAusdruck	go to state 256



state 229

    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt '(' . Argumentliste ')' CvQualifiziererliste   (rule 200)

    ')' 	reduce using rule 102 (Argumentliste)
    $default	reduce using rule 104 (@7)

    Argumentliste	go to state 257
    ArgDeklarationsliste	go to state 258
    @7  	go to state 259



state 230

    TemplateArgListe  ->  TemplateArgListe tKOMMA TemplateArg .   (rule 195)

    $default	reduce using rule 195 (TemplateArgListe)



state 231

    Elementdeklaration  ->  tUNION '{' '}' .   (rule 36)

    $default	reduce using rule 36 (Elementdeklaration)



state 232

    Elementdeklaration  ->  tFRIEND Klassenschluessel Klassenname .   (rule 34)

    $default	reduce using rule 34 (Elementdeklaration)



state 233

    EnumSpezifizierer  ->  tENUM '{' '}' .   (rule 208)

    $default	reduce using rule 208 (EnumSpezifizierer)



state 234

    EnumSpezifizierer  ->  tENUM Bezeichner '{' . '}'   (rule 207)

    '}' 	shift, and go to state 260



state 235

    FktDeklaratorName  ->  '(' Dname ')' .   (rule 134)

    $default	reduce using rule 134 (FktDeklaratorName)



state 236

    FktDeklaratorName  ->  Dname .   (rule 132)

    $default	reduce using rule 132 (FktDeklaratorName)



state 237

    FktDeklaratorName  ->  Zeigeroperator . FktDeklaratorName   (rule 133)

    tOPERATOR	shift, and go to state 62
    tIDENTIFIER	shift, and go to state 20
    '*' 	shift, and go to state 63
    '&' 	shift, and go to state 64
    '(' 	shift, and go to state 134

    Klassenname	go to state 36
    QualifizierterName	go to state 66
    QualifizierterTypname	go to state 67
    QualifizierterKlassenname	go to state 68
    Dname	go to state 236
    Name	go to state 71
    Zeigeroperator	go to state 237
    FktDeklaratorName	go to state 208
    Operatorfunktionsname	go to state 73
    Konversionsfunktionsname	go to state 74
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 75



state 238

    FktDeklaratorName  ->  '(' Zeigeroperator FktDeklaratorName . ')'   (rule 135)

    ')' 	shift, and go to state 261



state 239

    ElementDeklaratorliste  ->  ElementDeklaratorliste tKOMMA ElementDeklarator .   (rule 38)

    $default	reduce using rule 38 (ElementDeklaratorliste)



state 240

    Elementdeklaration  ->  DeklSpezifiziererliste ElementDeklaratorliste ';' .   (rule 27)

    $default	reduce using rule 27 (Elementdeklaration)



state 241

    Funktionsdefinition  ->  DeklSpezifiziererliste FktDeklarator KtorInitialisiererOpt . FktRumpf   (rule 113)

    tPUREVIRTUAL	shift, and go to state 246
    ';' 	shift, and go to state 247
    '{' 	shift, and go to state 248

    FktRumpf	go to state 262



state 242

    Destruktor  ->  FktSpezifiziererOpt '~' Bezeichner . @9 '(' VoidOpt ')' FktRumpf   (rule 124)

    $default	reduce using rule 123 (@9)

    @9  	go to state 263



state 243

    ElementInitialisierer  ->  QualifizierterKlassenname . '(' Ausdrucksliste ')'   (rule 138)
    ElementInitialisierer  ->  QualifizierterKlassenname . '(' ')'   (rule 139)

    '(' 	shift, and go to state 264



state 244

    KtorInitialisierer  ->  tDOPPELPUNKT ElementInitialisiererliste .   (rule 129)
    ElementInitialisiererliste  ->  ElementInitialisiererliste . tKOMMA ElementInitialisierer   (rule 137)

    tKOMMA	shift, and go to state 265

    $default	reduce using rule 129 (KtorInitialisierer)



state 245

    ElementInitialisiererliste  ->  ElementInitialisierer .   (rule 136)

    $default	reduce using rule 136 (ElementInitialisiererliste)



state 246

    FktRumpf  ->  tPUREVIRTUAL . ';'   (rule 118)

    ';' 	shift, and go to state 266



state 247

    FktRumpf  ->  ';' .   (rule 117)

    $default	reduce using rule 117 (FktRumpf)



state 248

    FktRumpf  ->  '{' . '}'   (rule 116)

    '}' 	shift, and go to state 267



state 249

    Funktionsdefinition  ->  FktDeklarator KtorInitialisiererOpt FktRumpf .   (rule 114)

    $default	reduce using rule 114 (Funktionsdefinition)



state 250

    FktDeklarator  ->  FktDeklaratorName @10 '(' . Argumentliste ')' CvQualifiziererliste   (rule 131)

    ')' 	reduce using rule 102 (Argumentliste)
    $default	reduce using rule 104 (@7)

    Argumentliste	go to state 268
    ArgDeklarationsliste	go to state 258
    @7  	go to state 259



state 251

    Basisliste  ->  Basisliste tKOMMA @6 Basisspezifizierer .   (rule 51)

    $default	reduce using rule 51 (Basisliste)



state 252

    Basisspezifizierer  ->  tVIRTUAL Zugriffsspezifizierer QualifizierterKlassenname .   (rule 55)

    $default	reduce using rule 55 (Basisspezifizierer)



state 253

    Basisspezifizierer  ->  Zugriffsspezifizierer tVIRTUAL QualifizierterKlassenname .   (rule 56)

    $default	reduce using rule 56 (Basisspezifizierer)



state 254

    AbstrakterDeklarator  ->  '(' AbstrakterDeklarator ')' .   (rule 202)

    $default	reduce using rule 202 (AbstrakterDeklarator)



state 255

    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt '[' KonstanterAusdruckOpt . ']'   (rule 201)

    ']' 	shift, and go to state 269



state 256

    KonstanterAusdruckOpt  ->  KonstanterAusdruck .   (rule 206)

    $default	reduce using rule 206 (KonstanterAusdruckOpt)



state 257

    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt '(' Argumentliste . ')' CvQualifiziererliste   (rule 200)

    ')' 	shift, and go to state 270



state 258

    Argumentliste  ->  ArgDeklarationsliste .   (rule 103)
    ArgDeklarationsliste  ->  ArgDeklarationsliste . tKOMMA @8 ArgumentDeklaration   (rule 107)

    tKOMMA	shift, and go to state 271

    $default	reduce using rule 103 (Argumentliste)



state 259

    ArgDeklarationsliste  ->  @7 . ArgumentDeklaration   (rule 105)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 37
    DeklSpezifiziererliste	go to state 38
    DeklSpezlisteStandard	go to state 39
    DeklSpezifiziererStandard	go to state 40
    DeklSpezZusatzListe	go to state 41
    DeklSpezifiziererZusatz	go to state 42
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 44
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    ArgumentDeklaration	go to state 272
    FktSpezifizierer	go to state 48
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 260

    EnumSpezifizierer  ->  tENUM Bezeichner '{' '}' .   (rule 207)

    $default	reduce using rule 207 (EnumSpezifizierer)



state 261

    FktDeklaratorName  ->  '(' Zeigeroperator FktDeklaratorName ')' .   (rule 135)

    $default	reduce using rule 135 (FktDeklaratorName)



state 262

    Funktionsdefinition  ->  DeklSpezifiziererliste FktDeklarator KtorInitialisiererOpt FktRumpf .   (rule 113)

    $default	reduce using rule 113 (Funktionsdefinition)



state 263

    Destruktor  ->  FktSpezifiziererOpt '~' Bezeichner @9 . '(' VoidOpt ')' FktRumpf   (rule 124)

    '(' 	shift, and go to state 273



state 264

    ElementInitialisierer  ->  QualifizierterKlassenname '(' . Ausdrucksliste ')'   (rule 138)
    ElementInitialisierer  ->  QualifizierterKlassenname '(' . ')'   (rule 139)

    tIDENTIFIER	shift, and go to state 20
    tANYTHINGELSE	shift, and go to state 274
    ')' 	shift, and go to state 275

    Ausdrucksliste	go to state 276
    Zuweisungsausdruck	go to state 277
    Bezeichner	go to state 278



state 265

    ElementInitialisiererliste  ->  ElementInitialisiererliste tKOMMA . ElementInitialisierer   (rule 137)

    tIDENTIFIER	shift, and go to state 20

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 243
    ElementInitialisierer	go to state 279
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 266

    FktRumpf  ->  tPUREVIRTUAL ';' .   (rule 118)

    $default	reduce using rule 118 (FktRumpf)



state 267

    FktRumpf  ->  '{' '}' .   (rule 116)

    $default	reduce using rule 116 (FktRumpf)



state 268

    FktDeklarator  ->  FktDeklaratorName @10 '(' Argumentliste . ')' CvQualifiziererliste   (rule 131)

    ')' 	shift, and go to state 280



state 269

    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt '[' KonstanterAusdruckOpt ']' .   (rule 201)

    $default	reduce using rule 201 (AbstrakterDeklarator)



state 270

    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt '(' Argumentliste ')' . CvQualifiziererliste   (rule 200)

    $default	reduce using rule 98 (CvQualifiziererliste)

    CvQualifiziererliste	go to state 281



state 271

    ArgDeklarationsliste  ->  ArgDeklarationsliste tKOMMA . @8 ArgumentDeklaration   (rule 107)

    $default	reduce using rule 106 (@8)

    @8  	go to state 282



state 272

    ArgDeklarationsliste  ->  @7 ArgumentDeklaration .   (rule 105)

    $default	reduce using rule 105 (ArgDeklarationsliste)



state 273

    Destruktor  ->  FktSpezifiziererOpt '~' Bezeichner @9 '(' . VoidOpt ')' FktRumpf   (rule 124)

    tVOID	shift, and go to state 283

    $default	reduce using rule 125 (VoidOpt)

    VoidOpt	go to state 284



state 274

    Zuweisungsausdruck  ->  tANYTHINGELSE .   (rule 144)

    $default	reduce using rule 144 (Zuweisungsausdruck)



state 275

    ElementInitialisierer  ->  QualifizierterKlassenname '(' ')' .   (rule 139)

    $default	reduce using rule 139 (ElementInitialisierer)



state 276

    ElementInitialisierer  ->  QualifizierterKlassenname '(' Ausdrucksliste . ')'   (rule 138)
    Ausdrucksliste  ->  Ausdrucksliste . tKOMMA Zuweisungsausdruck   (rule 141)

    tKOMMA	shift, and go to state 285
    ')' 	shift, and go to state 286



state 277

    Ausdrucksliste  ->  Zuweisungsausdruck .   (rule 140)

    $default	reduce using rule 140 (Ausdrucksliste)



state 278

    Zuweisungsausdruck  ->  Bezeichner . '=' tEXPRESSION   (rule 142)
    Zuweisungsausdruck  ->  Bezeichner .   (rule 143)

    '=' 	shift, and go to state 287

    $default	reduce using rule 143 (Zuweisungsausdruck)



state 279

    ElementInitialisiererliste  ->  ElementInitialisiererliste tKOMMA ElementInitialisierer .   (rule 137)

    $default	reduce using rule 137 (ElementInitialisiererliste)



state 280

    FktDeklarator  ->  FktDeklaratorName @10 '(' Argumentliste ')' . CvQualifiziererliste   (rule 131)

    $default	reduce using rule 98 (CvQualifiziererliste)

    CvQualifiziererliste	go to state 288



state 281

    CvQualifiziererliste  ->  CvQualifiziererliste . CvQualifizierer   (rule 99)
    AbstrakterDeklarator  ->  AbstrakterDeklaratorOpt '(' Argumentliste ')' CvQualifiziererliste .   (rule 200)

    tCONST	shift, and go to state 16
    tVOLATILE	shift, and go to state 19

    $default	reduce using rule 200 (AbstrakterDeklarator)

    CvQualifizierer	go to state 181



state 282

    ArgDeklarationsliste  ->  ArgDeklarationsliste tKOMMA @8 . ArgumentDeklaration   (rule 107)

    tVIRTUAL	shift, and go to state 14
    tINLINE	shift, and go to state 15
    tCONST	shift, and go to state 16
    tSTATIC	shift, and go to state 17
    tFRIEND	shift, and go to state 18
    tVOLATILE	shift, and go to state 19
    tIDENTIFIER	shift, and go to state 20
    tCHAR	shift, and go to state 21
    tSHORT	shift, and go to state 22
    tINT	shift, and go to state 23
    tLONG	shift, and go to state 24
    tSIGNED	shift, and go to state 25
    tUNSIGNED	shift, and go to state 26
    tFLOAT	shift, and go to state 27
    tDOUBLE	shift, and go to state 28
    tVOID	shift, and go to state 29
    tAUTO	shift, and go to state 30
    tREGISTER	shift, and go to state 31
    tEXTERN	shift, and go to state 32

    Klassenname	go to state 36
    QualifizierterKlassenname	go to state 37
    DeklSpezifiziererliste	go to state 38
    DeklSpezlisteStandard	go to state 39
    DeklSpezifiziererStandard	go to state 40
    DeklSpezZusatzListe	go to state 41
    DeklSpezifiziererZusatz	go to state 42
    StandardTypname	go to state 43
    DeklSpezlisteCustom	go to state 44
    Speicherklassenspezifizierer	go to state 45
    CvQualifizierer	go to state 46
    ArgumentDeklaration	go to state 289
    FktSpezifizierer	go to state 48
    TemplateKlassenname	go to state 49
    TemplateName	go to state 50
    Bezeichner	go to state 51



state 283

    VoidOpt  ->  tVOID .   (rule 126)

    $default	reduce using rule 126 (VoidOpt)



state 284

    Destruktor  ->  FktSpezifiziererOpt '~' Bezeichner @9 '(' VoidOpt . ')' FktRumpf   (rule 124)

    ')' 	shift, and go to state 290



state 285

    Ausdrucksliste  ->  Ausdrucksliste tKOMMA . Zuweisungsausdruck   (rule 141)

    tIDENTIFIER	shift, and go to state 20
    tANYTHINGELSE	shift, and go to state 274

    Zuweisungsausdruck	go to state 291
    Bezeichner	go to state 278



state 286

    ElementInitialisierer  ->  QualifizierterKlassenname '(' Ausdrucksliste ')' .   (rule 138)

    $default	reduce using rule 138 (ElementInitialisierer)



state 287

    Zuweisungsausdruck  ->  Bezeichner '=' . tEXPRESSION   (rule 142)

    tEXPRESSION	shift, and go to state 292



state 288

    CvQualifiziererliste  ->  CvQualifiziererliste . CvQualifizierer   (rule 99)
    FktDeklarator  ->  FktDeklaratorName @10 '(' Argumentliste ')' CvQualifiziererliste .   (rule 131)

    tCONST	shift, and go to state 16
    tVOLATILE	shift, and go to state 19

    $default	reduce using rule 131 (FktDeklarator)

    CvQualifizierer	go to state 181



state 289

    ArgDeklarationsliste  ->  ArgDeklarationsliste tKOMMA @8 ArgumentDeklaration .   (rule 107)

    $default	reduce using rule 107 (ArgDeklarationsliste)



state 290

    Destruktor  ->  FktSpezifiziererOpt '~' Bezeichner @9 '(' VoidOpt ')' . FktRumpf   (rule 124)

    tPUREVIRTUAL	shift, and go to state 246
    ';' 	shift, and go to state 247
    '{' 	shift, and go to state 248

    FktRumpf	go to state 293



state 291

    Ausdrucksliste  ->  Ausdrucksliste tKOMMA Zuweisungsausdruck .   (rule 141)

    $default	reduce using rule 141 (Ausdrucksliste)



state 292

    Zuweisungsausdruck  ->  Bezeichner '=' tEXPRESSION .   (rule 142)

    $default	reduce using rule 142 (Zuweisungsausdruck)



state 293

    Destruktor  ->  FktSpezifiziererOpt '~' Bezeichner @9 '(' VoidOpt ')' FktRumpf .   (rule 124)

    $default	reduce using rule 124 (Destruktor)



state 294

    $   	go to state 295



state 295

    $   	go to state 296



state 296

    $default	accept
