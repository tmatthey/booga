/*
 * $RCSfile: wxTraversal3D.h,v $
 *
 * Traversal logic for GL renderer. Performs a preorder traversal of the
 * world and applies textures and object transformations to the GL engine.
 *
 * Copyright (C) 1994-96, Christoph Streit <streit@iam.unibe.ch>
 *                        Stephan Amann <amann@iam.unibe.ch>
 *                        University of Berne, Switzerland
 *
 * All rights reserved.
 *
 * This software may be freely copied, modified, and redistributed
 * provided that this copyright notice is preserved on all copies.
 *
 * You may not distribute this software, in whole or in part, as part of
 * any commercial product without the express consent of the authors.
 *
 * There is no warranty or other guarantee of fitness of this software
 * for any purpose.  It is provided solely as is.
 *
 * -----------------------------------------------------------------------------
 *  $Id: wxTraversal3D.h,v 1.1 1996/09/27 15:08:04 buhlmann Exp $
 * -----------------------------------------------------------------------------
 */
   
#ifndef _wxTraversal3D_H
#define _wxTraversal3D_H

#include "booga/object/Texture3DContext.h"
#include "booga/glwrapper/GLAbstractTraversal3D.h"

//________________________________________________________________ wxTraversal3D

class wxTraversal3D : public GLAbstractTraversal3D {
declareRTTI(wxTraversal3D);
// enable RTTI support

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Constructors, destructors, assignment
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
public:
  // wxTraversal3D();                                // Use default version.
  // wxTraversal3D(const wxTraversal3D&);            // Use default version.

public:
  // virtual ~wxTraversal3D();                       // Use default version.      

public:
  // wxTraversal3D& operator=(const wxTraversal3D&); // Use default version.

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// New methods of class GLTraversal3D
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
private:
  bool doTraverse(Object3D* obj);
  // Recursively traverses the object structure. Calls traverse() for each 
  // object found or generated by a calling decomposition() on a unknown 
  // object
  // Returns true : continue
  //         false: abort the traversal

  void beforeVisitObject(Object3D *object);
  void afterVisitObject(Object3D* object);
  
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// From class MTraversal<>
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
protected:
  virtual bool traverse(Object3D* obj);
  // Calls doTraverse()

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// My data members
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
private:
  Texture3DContext myTextureContext;

};

//______________________________________________________________________ INLINES


#endif // _wxTraversal3D_H
