/*
 * $RCSfile: DummyMakeable.h,v $
 *
 * Copyright (C) 1996, Andrey Collison <collison@iam.unibe.ch>
 *                     University of Berne, Switzerland
 *
 * All rights reserved.
 *
 * This software may be freely copied, modified, and redistributed
 * provided that this copyright notice is preserved on all copies.
 *
 * You may not distribute this software, in whole or in part, as part of
 * any commercial product without the express consent of the authors.
 *
 * There is no warranty or other guarantee of fitness of this software
 * for any purpose.  It is provided solely "as is".
 *
 * -----------------------------------------------------------------------------
 *  $Id: DummyMakeable.h,v 1.3 1996/10/04 09:46:36 collison Exp $
 * -----------------------------------------------------------------------------
 */

#ifndef _DummyMakeable_H
#define _DummyMakeable_H

#include "booga/base/List.h"
#include "booga/base/Value.h"
#include "booga/object/Makeable.h"

//_____________________________________________________________________ DummyMakeable
//
// This dummy class was created to hold keyword and parameter information
// of simple terminal attributes temporaly generated by 
// Makeable::iterateAttributes() methods.
// 
// This is not a proper Makeable! Don't register don't call make()!
//

class DummyMakeable : public Makeable {
declareRTTI(DummyMakeable);
// enable RTTI support

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Constructors, destructors, assignment
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
public:
  DummyMakeable(const RCString& keyword);
  DummyMakeable(const RCString& keyword, const Value& value);

private:
  DummyMakeable(const DummyMakeable&);             // No copies.

public:
  // virtual ~DummyMakeable();                // Use default version.

private:
  DummyMakeable& operator=(const DummyMakeable&);  // No assignments.

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// New methods of class DummyMakeable
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
public:
  void addParameter(const Value& value);
  void addAttribute(Makeable* attribute);

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// From class Makeable
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
public:
  //
  // make is absolutly dummy! Never use!
  //
  virtual Makeable* make(RCString& errMsg, 
                         const List<Value*>* parameters) const;

  virtual RCString getKeyword() const;
  virtual List<Value*>* createParameters();
  virtual void iterateAttributes(MakeableHandler *handler); // do nothing

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// My data members
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
private:
  RCString myKeyword;
  List<Value> myParameters;
  List<Makeable*> myAttributes;
};

//______________________________________________________________________ INLINES

#endif // _DummyMakeable_H

