usage:  CC <options> <files>
available options:
        -64:  compile for 64-bit ABI
        -A:  add following cpp assertions
        -C:  C/C++: keep C comments after cpp; f77: runtime subscript checking
        -CG::  option group to control code generation
        -D:  add following macro define
        -DEBUG::  option group to debugging options
        -DEFAULT::  default options (abi,isa,proc)
        -E:  run cpp and send result to standard output
        -GRA::  option group to control global register allocation
        -H:  -H<phase> Halt after phase {p=cpp,f=fe,b=be,a=as,l=ld}
        -I:  add following directory to the include search path list
        -INLINE:  request inline processing
        -INLINE::  specify inline processing option group
        -IPA:  Perform interprocedural analysis and optimization
        -IPA::  option group to control interprocedural optimizations
        -J:  maximum number of jobs spawned by prelinker
        -L:  add following directory to the library search path list
        -LANG::  option group to control language features
        -LIST::  option group to control listing file and contents
        -LMSG::  option group to control error/warning messages in ld
        -LNO::  option group to control loop nest optimization
        -M:  run cpp and print list of make dependencies
        -MDtarget:  use the following as the target for make dependencies
        -MDupdate:  update the following file with make dependencies
        -MP::  option group to control distributed shared memory optimization
        -O:  same as -O2
        -O0:  no optimization
        -O1:  minimal optimization
        -O2:  global optimization
        -O3:  full optimization
        -OPT::  option group to control optimization
        -Ofast:  default fast option configuration
        -Ofast=:  processor-specific fast option configuration
        -P:  run cpp and send result to .i file
        -R:  pass flags to RATFOR
        -S:  produce a .s and stop
        -SWP::  option group to control software pipelining
        -TARG::  option group to control compilation target
        -TENV::  option group to control target environment
        -U:  undefine the following macro
        -VHO::  option group to control vho lowering
        -W:  -W<phase>,<arg> sends arg to phase {p=cpp,f=fe,b=be,a=as,l=ld}
        -WB,:  -WB,<arg> passes <arg> to the back-end via ipacom
        -WOPT::  option group internal-use WOPT options
        -Y:  -Y<phase>,<path> uses path to find phase {p=cpp,f=fe,b=be,a=as,l=ld,I=include,S=startup,L=libraries}
        -abi:  generate strict-abi-compliant object files
        -align128:  align data in common blocks to 128-bit boundaries
        -align16:  align data in common blocks to 16-bit boundaries
        -align32:  align data in common blocks to 32-bit boundaries
        -align64:  align data in common blocks to 64-bit boundaries
        -align8:  align data in common blocks to 8-bit boundaries
        -anach:  allow anachronisms
        -ansiE:  issue error message for non standard features
        -ansiW:  issue warning messages for non standard features
        -apo:  run Auto Parallel Optimizer
        -apokeep:  run Auto Parallel Optimizer and keep listing and pfa output
        -apolist:  run Auto Parallel Optimizer and keep listing
        -ar:  create an archive (instead of a shared object or executable) using ar
        -brief_diagnostics:  issue one-line diagnostic messages
        -c:  produce a .o and stop
        -call_shared:  call-shared PIC code
        -cfront:  cfront-compatible
        -cord:  Run cord
        -diag_error:  make named diagnostics into errors
        -diag_remark:  make named diagnostics into remarks
        -diag_suppress:  turn off named diagnostics
        -diag_warning:  make named diagnostics into warnings
        -dsm:  enable the DSM directives
        -dsm_check:  generate code to do reshape consistency check for args at run-time
        -dsm_clone:  run dsm prelinker with cloning for distributed reshaped arrays
        -dsm_recompile:  tell the fe and be to not touch rii files
        -exceptions:  turn on support for exception-handling
        -experimental:  Experimental C++ frontend that was supported in 7.1 release
        -fb:  Specify feedback file for be
        -fb_cdir:  Option needed to tell pixie where to emit the Count Files
        -fb_create:  Option needed for SPEC feedback file generation
        -fb_opt:  Option needed for using SPEC feedback files
        -fb_xdir:  Option needed to tell pixie where to emit the pixified dso's 
        -fbexe:  Option needed to specify the name of the pixified binary to prof
        -fbgen:  Option needed for generating feedback files for spec
        -fbuse:  Option needed to use feedback files for spec
        -fe:  stop after the front end is run
        -feedback:  Specify feedback file for cord
        -fullwarn:  give more warnings, especially about missing prototypes
        -g:  full debug info
        -g0:  no debug info
        -g3:  add some debugging to optimized code
        -gslim:  put out slim class debug info
        -gslim0:  put out slim class debug info
        -gslim2:  put out slim class debug info
        -help:  print list of possible options
        -help::  print list of possible options that contain given string
        -ignore_suffix:  ignore source suffix when determining compiler language
        -inline:  request inline processing
        -ipa:  Perform interprocedural analysis and optimization
        -keep:  keep intermediate files
        -l:  -l<arg> adds library lib<arg> to link list
        -memctr:  instrument for Origin memory counters
        -memsim:  instrument for memsim
        -mips1:  compile for mips1 instruction set
        -mips2:  compile for mips2 instruction set
        -mips3:  compile for mips3 instruction set
        -mips4:  compile for mips4 instruction set
        -mp:  enable the multiprocessing directives
        -no_exceptions:  turn off support for exception-handling (default)
        -no_prelink:  do not use prelinker (i.e. instantiate all templates immediately)
        -nobool:  disallow bool keyword
        -noinline:  suppress inline processing
        -non_shared:  compile non-shared (no DSO's)
        -nostdinc:  no predefined include search path list
        -nostdlib:  no predefined library search path list
        -o:  put output in following file name rather than a.out
        -objectlist:  Read the following file to get a list of files to be linked
        -pca:  run Power C Analyzer
        -pcakeep:  run Power C Analyzer and keep listing and pca output
        -pcalist:  run Power C Analyzer and keep listing
        -pfa:  run Power Fortran Analyzer
        -pfakeep:  run Power Fortran Analyzer and keep listing and pfa output
        -pfalist:  run Power Fortran Analyzer and keep listing
        -prelink:  use prelinker (default)
        -qikki:  Quick C++ frontend
        -r:  produce a relocatable .o and stop
        -shared:  dso-shared PIC code
        -show:  show phases as they are being invoked
        -show0:  show what phases would be called, but don't invoke anything
        -show_defaults:  show default values
        -showm:  show memory usage by each phase
        -showt:  show time taken by each phase
        -signed:  characters are signed by default
        -trapuv:  trap uninitialized variables
        -unsigned:  character are unsigned by default
        -v:  show phases as they are being invoked
        -version:  Show the version of the compiler being used
        -woff:  turn off named warnings
        -woffall:  turn off all warnings
        -woffoptions:  turn off warnings about options
        -ivpad:  inter-variable padding of common blocks
        -split_common:  check split COMMON for inconsistencies and fix them
